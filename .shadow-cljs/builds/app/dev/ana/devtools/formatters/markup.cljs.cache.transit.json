["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.markup');\r\ngoog.require('cljs.core');\r\ngoog.require('devtools.formatters.helpers');\r\ngoog.require('devtools.formatters.printing');\r\ngoog.require('devtools.formatters.state');\r\ngoog.require('devtools.formatters.templating');\r\ngoog.require('devtools.munging');\r\ndevtools.formatters.markup.print_with = (function devtools$formatters$markup$print_with(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58002 = arguments.length;\r\nvar i__4731__auto___58003 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58003 < len__4730__auto___58002)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58003]));\r\n\r\nvar G__58004 = (i__4731__auto___58003 + (1));\r\ni__4731__auto___58003 = G__58004;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((3) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((3)),(0),null)):null);\r\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic = (function (method,value,tag,p__57699){\r\nvar vec__57701 = p__57699;\r\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57701,(0),null);\r\nvar job_fn = (function (){\r\nvar G__57705 = value;\r\nvar G__57706 = tag;\r\nvar G__57707 = (devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0 ? devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0() : devtools.formatters.markup.get_markup_db.call(null));\r\nreturn (method.cljs$core$IFn$_invoke$arity$3 ? method.cljs$core$IFn$_invoke$arity$3(G__57705,G__57706,G__57707) : method.call(null,G__57705,G__57706,G__57707));\r\n});\r\nif((!((max_level == null)))){\r\nvar _STAR_print_level_STAR__orig_val__57708 = cljs.core._STAR_print_level_STAR_;\r\nvar _STAR_print_level_STAR__temp_val__57709 = (max_level + (1));\r\n(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__57709);\r\n\r\ntry{return job_fn();\r\n}finally {(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__57708);\r\n}} else {\r\nreturn job_fn();\r\n}\r\n}));\r\n\r\n(devtools.formatters.markup.print_with.cljs$lang$maxFixedArity = (3));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup.print_with.cljs$lang$applyTo = (function (seq57684){\r\nvar G__57685 = cljs.core.first(seq57684);\r\nvar seq57684__$1 = cljs.core.next(seq57684);\r\nvar G__57686 = cljs.core.first(seq57684__$1);\r\nvar seq57684__$2 = cljs.core.next(seq57684__$1);\r\nvar G__57687 = cljs.core.first(seq57684__$2);\r\nvar seq57684__$3 = cljs.core.next(seq57684__$2);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57685,G__57686,G__57687,seq57684__$3);\r\n}));\r\n\r\ndevtools.formatters.markup.print_via_writer = (function devtools$formatters$markup$print_via_writer(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58009 = arguments.length;\r\nvar i__4731__auto___58010 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58010 < len__4730__auto___58009)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58010]));\r\n\r\nvar G__58011 = (i__4731__auto___58010 + (1));\r\ni__4731__auto___58010 = G__58011;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__57726){\r\nvar vec__57727 = p__57726;\r\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57727,(0),null);\r\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_writer,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\r\n}));\r\n\r\n(devtools.formatters.markup.print_via_writer.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup.print_via_writer.cljs$lang$applyTo = (function (seq57722){\r\nvar G__57723 = cljs.core.first(seq57722);\r\nvar seq57722__$1 = cljs.core.next(seq57722);\r\nvar G__57724 = cljs.core.first(seq57722__$1);\r\nvar seq57722__$2 = cljs.core.next(seq57722__$1);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57723,G__57724,seq57722__$2);\r\n}));\r\n\r\ndevtools.formatters.markup.print_via_protocol = (function devtools$formatters$markup$print_via_protocol(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58013 = arguments.length;\r\nvar i__4731__auto___58014 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58014 < len__4730__auto___58013)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58014]));\r\n\r\nvar G__58017 = (i__4731__auto___58014 + (1));\r\ni__4731__auto___58014 = G__58017;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__57738){\r\nvar vec__57739 = p__57738;\r\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57739,(0),null);\r\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_protocol,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\r\n}));\r\n\r\n(devtools.formatters.markup.print_via_protocol.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup.print_via_protocol.cljs$lang$applyTo = (function (seq57731){\r\nvar G__57733 = cljs.core.first(seq57731);\r\nvar seq57731__$1 = cljs.core.next(seq57731);\r\nvar G__57734 = cljs.core.first(seq57731__$1);\r\nvar seq57731__$2 = cljs.core.next(seq57731__$1);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57733,G__57734,seq57731__$2);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_expandable_GT_ = (function devtools$formatters$markup$_LT_expandable_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58024 = arguments.length;\r\nvar i__4731__auto___58026 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58026 < len__4730__auto___58024)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58026]));\r\n\r\nvar G__58027 = (i__4731__auto___58026 + (1));\r\ni__4731__auto___58026 = G__58027;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\r\nvar inner_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-inner-tag\",\"expandable-inner-tag\",-799648560)], null),children);\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-tag\",\"expandable-tag\",151027578),new cljs.core.Keyword(null,\"expandable-symbol\",\"expandable-symbol\",1644611290),inner_markup], null);\r\n}));\r\n\r\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$applyTo = (function (seq57742){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq57742));\r\n}));\r\n\r\ndevtools.formatters.markup._LT_raw_surrogate_GT_ = (function devtools$formatters$markup$_LT_raw_surrogate_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58036 = arguments.length;\r\nvar i__4731__auto___58037 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58037 < len__4730__auto___58036)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58037]));\r\n\r\nvar G__58038 = (i__4731__auto___58037 + (1));\r\ni__4731__auto___58037 = G__58038;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"surrogate\"], null),args);\r\n}));\r\n\r\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$applyTo = (function (seq57750){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq57750));\r\n}));\r\n\r\ndevtools.formatters.markup._LT_surrogate_GT_ = (function devtools$formatters$markup$_LT_surrogate_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58043 = arguments.length;\r\nvar i__4731__auto___58044 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58044 < len__4730__auto___58043)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58044]));\r\n\r\nvar G__58045 = (i__4731__auto___58044 + (1));\r\ni__4731__auto___58044 = G__58045;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (p__57765){\r\nvar vec__57767 = p__57765;\r\nvar object = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57767,(0),null);\r\nvar header = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57767,(1),null);\r\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57767,(2),null);\r\nvar start_index = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57767,(3),null);\r\nvar header__$1 = (((!((body == null))))?devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header], 0)):header);\r\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,header__$1,body,start_index], 0));\r\n}));\r\n\r\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$applyTo = (function (seq57761){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq57761));\r\n}));\r\n\r\ndevtools.formatters.markup._LT_reference_GT_ = (function devtools$formatters$markup$_LT_reference_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58058 = arguments.length;\r\nvar i__4731__auto___58059 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58059 < len__4730__auto___58058)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58059]));\r\n\r\nvar G__58062 = (i__4731__auto___58059 + (1));\r\ni__4731__auto___58059 = G__58062;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"reference\"], null),args);\r\n}));\r\n\r\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$applyTo = (function (seq57772){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq57772));\r\n}));\r\n\r\ndevtools.formatters.markup._LT_reference_surrogate_GT_ = (function devtools$formatters$markup$_LT_reference_surrogate_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58067 = arguments.length;\r\nvar i__4731__auto___58068 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58068 < len__4730__auto___58067)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58068]));\r\n\r\nvar G__58069 = (i__4731__auto___58068 + (1));\r\ni__4731__auto___58068 = G__58069;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_surrogate_GT_,args)], 0));\r\n}));\r\n\r\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$applyTo = (function (seq57775){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq57775));\r\n}));\r\n\r\ndevtools.formatters.markup._LT_circular_reference_GT_ = (function devtools$formatters$markup$_LT_circular_reference_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58073 = arguments.length;\r\nvar i__4731__auto___58074 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58074 < len__4730__auto___58073)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58074]));\r\n\r\nvar G__58078 = (i__4731__auto___58074 + (1));\r\ni__4731__auto___58074 = G__58078;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-tag\",\"circular-reference-tag\",858973471),new cljs.core.Keyword(null,\"circular-ref-icon\",\"circular-ref-icon\",-2087682919)], null),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-body-tag\",\"circular-reference-body-tag\",-1301830023)], null),children)], 0));\r\n}));\r\n\r\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$applyTo = (function (seq57798){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq57798));\r\n}));\r\n\r\ndevtools.formatters.markup._LT_native_reference_GT_ = (function devtools$formatters$markup$_LT_native_reference_GT_(object){\r\nvar reference = devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,(function (p1__57804_SHARP_){\r\nreturn devtools.formatters.state.set_prevent_recursion(p1__57804_SHARP_,true);\r\n})], 0));\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-wrapper-tag\",\"native-reference-wrapper-tag\",2047690940),new cljs.core.Keyword(null,\"native-reference-background\",\"native-reference-background\",-286129550),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-tag\",\"native-reference-tag\",-1516119079),reference], null)], null);\r\n});\r\ndevtools.formatters.markup._LT_header_expander_GT_ = (function devtools$formatters$markup$_LT_header_expander_GT_(object){\r\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,new cljs.core.Keyword(null,\"header-expander-symbol\",\"header-expander-symbol\",907531743),new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0)),devtools.formatters.state.reset_depth_limits], 0));\r\n});\r\ndevtools.formatters.markup._LT_cljs_land_GT_ = (function devtools$formatters$markup$_LT_cljs_land_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58090 = arguments.length;\r\nvar i__4731__auto___58091 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58091 < len__4730__auto___58090)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58091]));\r\n\r\nvar G__58095 = (i__4731__auto___58091 + (1));\r\ni__4731__auto___58091 = G__58095;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cljs-land-tag\",\"cljs-land-tag\",-7524377)], null),children);\r\n}));\r\n\r\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$applyTo = (function (seq57807){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq57807));\r\n}));\r\n\r\ndevtools.formatters.markup._LT_nil_GT_ = (function devtools$formatters$markup$_LT_nil_GT_(){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"nil-tag\",\"nil-tag\",-1587449115),new cljs.core.Keyword(null,\"nil-label\",\"nil-label\",-587789203)], null);\r\n});\r\ndevtools.formatters.markup._LT_bool_GT_ = (function devtools$formatters$markup$_LT_bool_GT_(bool){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bool-tag\",\"bool-tag\",-10409808),cljs.core.str.cljs$core$IFn$_invoke$arity$1(bool)], null);\r\n});\r\ndevtools.formatters.markup._LT_keyword_GT_ = (function devtools$formatters$markup$_LT_keyword_GT_(keyword){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keyword-tag\",\"keyword-tag\",1587228387),cljs.core.str.cljs$core$IFn$_invoke$arity$1(keyword)], null);\r\n});\r\ndevtools.formatters.markup._LT_symbol_GT_ = (function devtools$formatters$markup$_LT_symbol_GT_(symbol){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"symbol-tag\",\"symbol-tag\",-100807517),cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol)], null);\r\n});\r\ndevtools.formatters.markup._LT_number_GT_ = (function devtools$formatters$markup$_LT_number_GT_(number){\r\nif(cljs.core.truth_(isFinite(number))){\r\nif(cljs.core.integer_QMARK_(number)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"integer-tag\",\"integer-tag\",698000472),number], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-tag\",\"float-tag\",-390834106),number], null);\r\n}\r\n} else {\r\nif(cljs.core.truth_(isNaN(number))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-nan-tag\",\"float-nan-tag\",557403379),cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([number], 0))], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-infinity-tag\",\"float-infinity-tag\",-289254297),cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([number], 0))], null);\r\n}\r\n}\r\n});\r\ndevtools.formatters.markup._LT_string_GT_ = (function devtools$formatters$markup$_LT_string_GT_(string){\r\nvar dq = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"dq\",\"dq\",-1690275860));\r\nvar re_nl = (new RegExp(\"\\n\",\"g\"));\r\nvar nl_marker = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"new-line-string-replacer\",\"new-line-string-replacer\",-753206206));\r\nvar inline_string = string.replace(re_nl,nl_marker);\r\nvar max_inline_string_size = (devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)) + devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\r\nvar quote_string = (function (s){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq)].join('');\r\n});\r\nvar should_abbreviate_QMARK_ = (cljs.core.count(inline_string) > max_inline_string_size);\r\nif(should_abbreviate_QMARK_){\r\nvar abbreviated_string = devtools.formatters.helpers.abbreviate_long_string(inline_string,devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-abbreviation-marker\",\"string-abbreviation-marker\",-347785112)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\r\nvar abbreviated_string_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(abbreviated_string)], null);\r\nvar string_with_nl_markers = string.replace(re_nl,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(nl_marker),\"\\n\"].join(''));\r\nvar details_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expanded-string-tag\",\"expanded-string-tag\",-2125162127),string_with_nl_markers], null);\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([string,abbreviated_string_markup,details_markup], 0));\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(inline_string)], null);\r\n}\r\n});\r\ndevtools.formatters.markup._LT_preview_GT_ = (function devtools$formatters$markup$_LT_preview_GT_(value){\r\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"header-tag\",\"header-tag\",1594852433),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-print-level\",\"max-print-level\",-462237413))], 0));\r\n});\r\ndevtools.formatters.markup._LT_body_GT_ = (function devtools$formatters$markup$_LT_body_GT_(markup){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-tag\",\"body-tag\",433527431),markup], null);\r\n});\r\ndevtools.formatters.markup._LT_aligned_body_GT_ = (function devtools$formatters$markup$_LT_aligned_body_GT_(markups_lists){\r\nvar prepend_li_tag = (function (line){\r\nif(cljs.core.truth_(line)){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"aligned-li-tag\",\"aligned-li-tag\",1727029722)], null),line);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nvar aligned_lines = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\r\nreturn devtools.formatters.markup._LT_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747)], null),aligned_lines));\r\n});\r\ndevtools.formatters.markup._LT_standard_body_GT_ = (function devtools$formatters$markup$_LT_standard_body_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58107 = arguments.length;\r\nvar i__4731__auto___58109 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58109 < len__4730__auto___58107)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58109]));\r\n\r\nvar G__58110 = (i__4731__auto___58109 + (1));\r\ni__4731__auto___58109 = G__58110;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (markups_lists,p__57830){\r\nvar vec__57831 = p__57830;\r\nvar no_margin_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57831,(0),null);\r\nvar ol_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747):new cljs.core.Keyword(null,\"standard-ol-tag\",\"standard-ol-tag\",1120081433));\r\nvar li_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-li-no-margin-tag\",\"standard-li-no-margin-tag\",-844555468):new cljs.core.Keyword(null,\"standard-li-tag\",\"standard-li-tag\",-932749876));\r\nvar prepend_li_tag = (function (line){\r\nif(cljs.core.truth_(line)){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [li_tag], null),line);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nvar lines_markups = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ol_tag], null),lines_markups);\r\n}));\r\n\r\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$applyTo = (function (seq57822){\r\nvar G__57823 = cljs.core.first(seq57822);\r\nvar seq57822__$1 = cljs.core.next(seq57822);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57823,seq57822__$1);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_standard_body_reference_GT_ = (function devtools$formatters$markup$_LT_standard_body_reference_GT_(o){\r\nreturn devtools.formatters.markup._LT_standard_body_GT_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([o], 0))], null)], null));\r\n});\r\ndevtools.formatters.markup._LT_index_GT_ = (function devtools$formatters$markup$_LT_index_GT_(value){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"index-tag\",\"index-tag\",693492486),value,new cljs.core.Keyword(null,\"line-index-separator\",\"line-index-separator\",-1735989246)], null);\r\n});\r\ndevtools.formatters.markup.body_line = (function devtools$formatters$markup$body_line(index,value){\r\nvar index_markup = devtools.formatters.markup._LT_index_GT_(index);\r\nvar value_markup = devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"item-tag\",\"item-tag\",-988763304),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"body-line-max-print-level\",\"body-line-max-print-level\",571158623))], 0));\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index_markup,value_markup], null);\r\n});\r\ndevtools.formatters.markup.prepare_body_lines = (function devtools$formatters$markup$prepare_body_lines(data,starting_index){\r\nvar work = data;\r\nvar index = starting_index;\r\nvar lines = cljs.core.PersistentVector.EMPTY;\r\nwhile(true){\r\nif(cljs.core.empty_QMARK_(work)){\r\nreturn lines;\r\n} else {\r\nvar G__58118 = cljs.core.rest(work);\r\nvar G__58119 = (index + (1));\r\nvar G__58120 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,devtools.formatters.markup.body_line(index,cljs.core.first(work)));\r\nwork = G__58118;\r\nindex = G__58119;\r\nlines = G__58120;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\ndevtools.formatters.markup.body_lines = (function devtools$formatters$markup$body_lines(value,starting_index){\r\nvar seq = cljs.core.seq(value);\r\nvar max_number_body_items = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-number-body-items\",\"max-number-body-items\",299914624));\r\nvar chunk = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\r\nvar rest = cljs.core.drop.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\r\nvar lines = devtools.formatters.markup.prepare_body_lines(chunk,starting_index);\r\nvar continue_QMARK_ = (!(cljs.core.empty_QMARK_(cljs.core.take.cljs$core$IFn$_invoke$arity$2((1),rest))));\r\nif((!(continue_QMARK_))){\r\nreturn lines;\r\n} else {\r\nvar more_label_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-items-more-tag\",\"body-items-more-tag\",867141569),new cljs.core.Keyword(null,\"body-items-more-label\",\"body-items-more-label\",-1561152123)], null);\r\nvar start_index = (starting_index + max_number_body_items);\r\nvar more_markup = devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([rest,more_label_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721),start_index], 0));\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [more_markup], null));\r\n}\r\n});\r\ndevtools.formatters.markup._LT_details_GT_ = (function devtools$formatters$markup$_LT_details_GT_(value,starting_index){\r\nvar has_continuation_QMARK_ = (starting_index > (0));\r\nvar body_markup = devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup.body_lines(value,starting_index),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([has_continuation_QMARK_], 0));\r\nif(has_continuation_QMARK_){\r\nreturn body_markup;\r\n} else {\r\nreturn devtools.formatters.markup._LT_body_GT_(body_markup);\r\n}\r\n});\r\ndevtools.formatters.markup._LT_list_details_GT_ = (function devtools$formatters$markup$_LT_list_details_GT_(items,_opts){\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,items));\r\n});\r\ndevtools.formatters.markup._LT_list_GT_ = (function devtools$formatters$markup$_LT_list_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58124 = arguments.length;\r\nvar i__4731__auto___58125 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58125 < len__4730__auto___58124)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58125]));\r\n\r\nvar G__58126 = (i__4731__auto___58125 + (1));\r\ni__4731__auto___58125 = G__58126;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (items,max_count,p__57847){\r\nvar vec__57848 = p__57847;\r\nvar opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57848,(0),null);\r\nvar items_markups = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_count,items);\r\nvar more_count = (cljs.core.count(items) - max_count);\r\nvar more_QMARK_ = (more_count > (0));\r\nvar separator = (function (){var or__4120__auto__ = new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__4120__auto__)){\r\nreturn or__4120__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"list-separator\",\"list-separator\",900562185);\r\n}\r\n})();\r\nvar more_symbol = ((more_QMARK_)?(function (){var temp__5733__auto__ = new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(temp__5733__auto__)){\r\nvar more_symbol = temp__5733__auto__;\r\nif(cljs.core.fn_QMARK_(more_symbol)){\r\nreturn (more_symbol.cljs$core$IFn$_invoke$arity$1 ? more_symbol.cljs$core$IFn$_invoke$arity$1(more_count) : more_symbol.call(null,more_count));\r\n} else {\r\nreturn more_symbol;\r\n}\r\n} else {\r\nreturn devtools.formatters.helpers.get_more_marker(more_count);\r\n}\r\n})():null);\r\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4120__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__4120__auto__)){\r\nreturn or__4120__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"list-tag\",\"list-tag\",1555796884);\r\n}\r\n})(),(function (){var or__4120__auto__ = new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__4120__auto__)){\r\nreturn or__4120__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"list-open-symbol\",\"list-open-symbol\",-1162287443);\r\n}\r\n})()], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(separator,items_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [separator,more_symbol], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4120__auto__ = new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__4120__auto__)){\r\nreturn or__4120__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"list-close-symbol\",\"list-close-symbol\",-1120016586);\r\n}\r\n})()], null)], 0));\r\nif(more_QMARK_){\r\nvar details_markup = new cljs.core.Keyword(null,\"details\",\"details\",1956795411).cljs$core$IFn$_invoke$arity$1(opts);\r\nvar default_details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$3(devtools.formatters.markup._LT_list_details_GT_,items,opts);\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,(function (){var or__4120__auto__ = details_markup;\r\nif(cljs.core.truth_(or__4120__auto__)){\r\nreturn or__4120__auto__;\r\n} else {\r\nreturn default_details_fn;\r\n}\r\n})()], 0));\r\n} else {\r\nreturn preview_markup;\r\n}\r\n}));\r\n\r\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$applyTo = (function (seq57843){\r\nvar G__57844 = cljs.core.first(seq57843);\r\nvar seq57843__$1 = cljs.core.next(seq57843);\r\nvar G__57845 = cljs.core.first(seq57843__$1);\r\nvar seq57843__$2 = cljs.core.next(seq57843__$1);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57844,G__57845,seq57843__$2);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_meta_GT_ = (function devtools$formatters$markup$_LT_meta_GT_(metadata){\r\nvar body_fn = (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-body-tag\",\"meta-body-tag\",1689183121),devtools.formatters.markup._LT_preview_GT_(metadata)], null);\r\n});\r\nvar header = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-header-tag\",\"meta-header-tag\",-1207812581),\"meta\"], null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-reference-tag\",\"meta-reference-tag\",914791936),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([metadata,header,body_fn], 0))], null);\r\n});\r\ndevtools.formatters.markup._LT_meta_wrapper_GT_ = (function devtools$formatters$markup$_LT_meta_wrapper_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58139 = arguments.length;\r\nvar i__4731__auto___58141 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58141 < len__4730__auto___58139)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58141]));\r\n\r\nvar G__58143 = (i__4731__auto___58141 + (1));\r\ni__4731__auto___58141 = G__58143;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (metadata,children){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-wrapper-tag\",\"meta-wrapper-tag\",1927429038)], null),children,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_meta_GT_(metadata)], null)], 0));\r\n}));\r\n\r\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$applyTo = (function (seq57865){\r\nvar G__57866 = cljs.core.first(seq57865);\r\nvar seq57865__$1 = cljs.core.next(seq57865);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57866,seq57865__$1);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_function_details_GT_ = (function devtools$formatters$markup$_LT_function_details_GT_(fn_obj,ns,_name,arities,prefix){\r\nif(cljs.core.fn_QMARK_(fn_obj)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\r\n}\r\n\r\nvar arities__$1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.wrap_arity,arities);\r\nvar make_arity_markup_list = (function (arity){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-multi-arity-args-indent-tag\",\"fn-multi-arity-args-indent-tag\",-1931373734),prefix], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),arity], null)], null);\r\n});\r\nvar arities_markupts_lists = (((cljs.core.count(arities__$1) > (1)))?cljs.core.map.cljs$core$IFn$_invoke$arity$2(make_arity_markup_list,arities__$1):null);\r\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\r\nvar native_markups_list = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(fn_obj)], null);\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arities_markupts_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\r\n});\r\ndevtools.formatters.markup._LT_arities_GT_ = (function devtools$formatters$markup$_LT_arities_GT_(arities){\r\nvar multi_arity_QMARK_ = (cljs.core.count(arities) > (1));\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),devtools.formatters.helpers.wrap_arity(((multi_arity_QMARK_)?devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653)):cljs.core.first(arities)))], null);\r\n});\r\ndevtools.formatters.markup._LT_function_GT_ = (function devtools$formatters$markup$_LT_function_GT_(fn_obj){\r\nif(cljs.core.fn_QMARK_(fn_obj)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\r\n}\r\n\r\nvar vec__57874 = devtools.munging.parse_fn_info(fn_obj);\r\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57874,(0),null);\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57874,(1),null);\r\nvar lambda_QMARK_ = cljs.core.empty_QMARK_(name);\r\nvar spacer_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"spacer\",\"spacer\",2067425139));\r\nvar rest_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"rest-symbol\",\"rest-symbol\",1021371174));\r\nvar multi_arity_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653));\r\nvar arities = devtools.munging.extract_arities(fn_obj,true,spacer_symbol,multi_arity_symbol,rest_symbol);\r\nvar arities_markup = devtools.formatters.markup._LT_arities_GT_(arities);\r\nvar name_markup = (((!(lambda_QMARK_)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-name-tag\",\"fn-name-tag\",555823755),name], null):null);\r\nvar icon_markup = ((lambda_QMARK_)?new cljs.core.Keyword(null,\"lambda-icon\",\"lambda-icon\",980753546):new cljs.core.Keyword(null,\"fn-icon\",\"fn-icon\",-1412665288));\r\nvar prefix_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-prefix-tag\",\"fn-prefix-tag\",1947411856),icon_markup,name_markup], null);\r\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-header-tag\",\"fn-header-tag\",-1262068349),prefix_markup,arities_markup], null);\r\nvar details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_function_details_GT_,fn_obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arities,prefix_markup], 0));\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fn_obj,preview_markup,details_fn], 0));\r\n});\r\ndevtools.formatters.markup._LT_type_basis_item_GT_ = (function devtools$formatters$markup$_LT_type_basis_item_GT_(basis_item){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-item-tag\",\"type-basis-item-tag\",50612816),cljs.core.name(basis_item)], null);\r\n});\r\ndevtools.formatters.markup._LT_type_basis_GT_ = (function devtools$formatters$markup$_LT_type_basis_GT_(basis){\r\nvar item_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_type_basis_item_GT_,basis);\r\nvar children_markups = cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type-basis-item-separator\",\"type-basis-item-separator\",-2029193896),item_markups);\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-tag\",\"type-basis-tag\",-2122159204)], null),children_markups);\r\n});\r\ndevtools.formatters.markup._LT_type_details_GT_ = (function devtools$formatters$markup$_LT_type_details_GT_(constructor_fn,ns,_name,basis){\r\nvar ns_markup = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\r\nvar basis_markup = ((cljs.core.empty_QMARK_(basis))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"empty-basis-symbol\",\"empty-basis-symbol\",-1971559593)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"basis-icon\",\"basis-icon\",1917779567),devtools.formatters.markup._LT_type_basis_GT_(basis)], null));\r\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(constructor_fn)], null);\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [basis_markup,ns_markup,native_markup], null));\r\n});\r\ndevtools.formatters.markup._LT_type_GT_ = (function devtools$formatters$markup$_LT_type_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58223 = arguments.length;\r\nvar i__4731__auto___58227 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58227 < len__4730__auto___58223)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58227]));\r\n\r\nvar G__58230 = (i__4731__auto___58227 + (1));\r\ni__4731__auto___58227 = G__58230;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__57889){\r\nvar vec__57890 = p__57889;\r\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57890,(0),null);\r\nvar vec__57893 = devtools.munging.parse_constructor_info(constructor_fn);\r\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57893,(0),null);\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57893,(1),null);\r\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57893,(2),null);\r\nvar name_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-name-tag\",\"type-name-tag\",-1317275511),name], null);\r\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4120__auto__ = header_tag;\r\nif(cljs.core.truth_(or__4120__auto__)){\r\nreturn or__4120__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"type-header-tag\",\"type-header-tag\",1645372265);\r\n}\r\n})(),new cljs.core.Keyword(null,\"type-symbol\",\"type-symbol\",-941894755),name_markup], null);\r\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_type_details_GT_,constructor_fn,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([basis], 0));\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-wrapper-tag\",\"type-wrapper-tag\",-1732366004),new cljs.core.Keyword(null,\"type-header-background\",\"type-header-background\",-810861696),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-ref-tag\",\"type-ref-tag\",2126727355),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([constructor_fn,preview_markup,details_markup_fn], 0))], null)], null);\r\n}));\r\n\r\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$applyTo = (function (seq57885){\r\nvar G__57886 = cljs.core.first(seq57885);\r\nvar seq57885__$1 = cljs.core.next(seq57885);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57886,seq57885__$1);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_standalone_type_GT_ = (function devtools$formatters$markup$_LT_standalone_type_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58246 = arguments.length;\r\nvar i__4731__auto___58247 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58247 < len__4730__auto___58246)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58247]));\r\n\r\nvar G__58248 = (i__4731__auto___58247 + (1));\r\ni__4731__auto___58247 = G__58248;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__57904){\r\nvar vec__57905 = p__57904;\r\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57905,(0),null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standalone-type-tag\",\"standalone-type-tag\",-1677164791),devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header_tag], 0))], null);\r\n}));\r\n\r\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$applyTo = (function (seq57901){\r\nvar G__57902 = cljs.core.first(seq57901);\r\nvar seq57901__$1 = cljs.core.next(seq57901);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57902,seq57901__$1);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_protocol_method_arity_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arity_GT_(arity_fn){\r\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arity_fn], 0));\r\n});\r\ndevtools.formatters.markup._LT_protocol_method_arities_details_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_details_GT_(fns){\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,fns));\r\n});\r\ndevtools.formatters.markup._LT_protocol_method_arities_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58255 = arguments.length;\r\nvar i__4731__auto___58256 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58256 < len__4730__auto___58255)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58256]));\r\n\r\nvar G__58257 = (i__4731__auto___58256 + (1));\r\ni__4731__auto___58256 = G__58257;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fns,p__57911){\r\nvar vec__57912 = p__57911;\r\nvar max_fns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57912,(0),null);\r\nvar max_fns__$1 = (function (){var or__4120__auto__ = max_fns;\r\nif(cljs.core.truth_(or__4120__auto__)){\r\nreturn or__4120__auto__;\r\n} else {\r\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-protocol-method-arities-list\",\"max-protocol-method-arities-list\",-45936465));\r\n}\r\n})();\r\nvar more_QMARK_ = (cljs.core.count(fns) > max_fns__$1);\r\nvar aritites_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fns__$1,fns));\r\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-tag\",\"protocol-method-arities-header-tag\",734407707),new cljs.core.Keyword(null,\"protocol-method-arities-header-open-symbol\",\"protocol-method-arities-header-open-symbol\",1704200465)], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"protocol-method-arities-list-header-separator\",\"protocol-method-arities-list-header-separator\",-115158954),aritites_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-more-symbol\",\"protocol-method-arities-more-symbol\",-477018522)], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-close-symbol\",\"protocol-method-arities-header-close-symbol\",-1375237120)], null)], 0));\r\nif(more_QMARK_){\r\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arities_details_GT_,fns);\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,details_markup_fn], 0));\r\n} else {\r\nreturn preview_markup;\r\n}\r\n}));\r\n\r\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$applyTo = (function (seq57909){\r\nvar G__57910 = cljs.core.first(seq57909);\r\nvar seq57909__$1 = cljs.core.next(seq57909);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57910,seq57909__$1);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_protocol_method_GT_ = (function devtools$formatters$markup$_LT_protocol_method_GT_(name,arities){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-tag\",\"protocol-method-tag\",2032279830),new cljs.core.Keyword(null,\"method-icon\",\"method-icon\",-1678775281),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-name-tag\",\"protocol-method-name-tag\",-1030376744),name], null),devtools.formatters.markup._LT_protocol_method_arities_GT_(arities)], null);\r\n});\r\ndevtools.formatters.markup._LT_protocol_details_GT_ = (function devtools$formatters$markup$_LT_protocol_details_GT_(obj,ns,_name,selector,_fast_QMARK_){\r\nvar protocol_obj = devtools.munging.get_protocol_object(selector);\r\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-ns-name-tag\",\"protocol-ns-name-tag\",1832081510),ns], null)], null):null);\r\nvar native_markups_list = (((!((protocol_obj == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(protocol_obj)], null):null);\r\nvar methods$ = devtools.munging.collect_protocol_methods(obj,selector);\r\nvar methods_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__57925){\r\nvar vec__57926 = p__57925;\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57926,(0),null);\r\nvar arities = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57926,(1),null);\r\nreturn devtools.formatters.markup._LT_protocol_method_GT_(name,arities);\r\n}),methods$);\r\nvar methods_markups_lists = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,methods_markups);\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(methods_markups_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\r\n});\r\ndevtools.formatters.markup._LT_protocol_GT_ = (function devtools$formatters$markup$_LT_protocol_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58275 = arguments.length;\r\nvar i__4731__auto___58276 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58276 < len__4730__auto___58275)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58276]));\r\n\r\nvar G__58277 = (i__4731__auto___58276 + (1));\r\ni__4731__auto___58276 = G__58277;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocol,p__57934){\r\nvar vec__57935 = p__57934;\r\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57935,(0),null);\r\nvar map__57938 = protocol;\r\nvar map__57938__$1 = (((((!((map__57938 == null))))?(((((map__57938.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__57938.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__57938):map__57938);\r\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57938__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\r\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57938__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\r\nvar selector = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57938__$1,new cljs.core.Keyword(null,\"selector\",\"selector\",762528866));\r\nvar fast_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57938__$1,new cljs.core.Keyword(null,\"fast?\",\"fast?\",-1813307150));\r\nvar preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4120__auto__ = tag;\r\nif(cljs.core.truth_(or__4120__auto__)){\r\nreturn or__4120__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"protocol-name-tag\",\"protocol-name-tag\",1508238310);\r\n}\r\n})(),name], null);\r\nvar prefix_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(fast_QMARK_)?new cljs.core.Keyword(null,\"fast-protocol-tag\",\"fast-protocol-tag\",2066025065):new cljs.core.Keyword(null,\"slow-protocol-tag\",\"slow-protocol-tag\",2061129467)),new cljs.core.Keyword(null,\"protocol-background\",\"protocol-background\",1111513794)], null);\r\nif((!((obj == null)))){\r\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_protocol_details_GT_,obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([selector,fast_QMARK_], 0));\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,preview_markup,details_markup_fn], 0)));\r\n} else {\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,preview_markup);\r\n}\r\n}));\r\n\r\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$applyTo = (function (seq57930){\r\nvar G__57931 = cljs.core.first(seq57930);\r\nvar seq57930__$1 = cljs.core.next(seq57930);\r\nvar G__57932 = cljs.core.first(seq57930__$1);\r\nvar seq57930__$2 = cljs.core.next(seq57930__$1);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57931,G__57932,seq57930__$2);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_more_protocols_GT_ = (function devtools$formatters$markup$_LT_more_protocols_GT_(more_count){\r\nvar fake_protocol = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),devtools.formatters.helpers.get_more_marker(more_count)], null);\r\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic(null,fake_protocol,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"protocol-more-tag\",\"protocol-more-tag\",2098702865)], 0));\r\n});\r\ndevtools.formatters.markup._LT_protocols_list_GT_ = (function devtools$formatters$markup$_LT_protocols_list_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58297 = arguments.length;\r\nvar i__4731__auto___58298 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58298 < len__4730__auto___58297)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58298]));\r\n\r\nvar G__58303 = (i__4731__auto___58298 + (1));\r\ni__4731__auto___58298 = G__58303;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocols,p__57952){\r\nvar vec__57953 = p__57952;\r\nvar max_protocols = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57953,(0),null);\r\nvar max_protocols__$1 = (function (){var or__4120__auto__ = max_protocols;\r\nif(cljs.core.truth_(or__4120__auto__)){\r\nreturn or__4120__auto__;\r\n} else {\r\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-list-protocols\",\"max-list-protocols\",-537135129));\r\n}\r\n})();\r\nvar protocols_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_GT_,obj),protocols);\r\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic(protocols_markups,max_protocols__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"protocols-header-tag\",\"protocols-header-tag\",-734413384),new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825),new cljs.core.Keyword(null,\"protocols-list-open-symbol\",\"protocols-list-open-symbol\",-729713043),new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165),new cljs.core.Keyword(null,\"protocols-list-close-symbol\",\"protocols-list-close-symbol\",652072902),new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125),new cljs.core.Keyword(null,\"header-protocol-separator\",\"header-protocol-separator\",445531439),new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242),devtools.formatters.markup._LT_more_protocols_GT_], null)], 0));\r\n}));\r\n\r\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$applyTo = (function (seq57946){\r\nvar G__57947 = cljs.core.first(seq57946);\r\nvar seq57946__$1 = cljs.core.next(seq57946);\r\nvar G__57948 = cljs.core.first(seq57946__$1);\r\nvar seq57946__$2 = cljs.core.next(seq57946__$1);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57947,G__57948,seq57946__$2);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_field_GT_ = (function devtools$formatters$markup$_LT_field_GT_(name,value){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-tag\",\"header-field-tag\",-1403476101),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-name-tag\",\"header-field-name-tag\",82291956),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null),new cljs.core.Keyword(null,\"header-field-value-spacer\",\"header-field-value-spacer\",-1210630679),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-value-tag\",\"header-field-value-tag\",-1708691701),devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),(function (p1__57958_SHARP_){\r\nreturn devtools.formatters.state.set_managed_print_level(p1__57958_SHARP_,(1));\r\n})], 0))], null),new cljs.core.Keyword(null,\"header-field-separator\",\"header-field-separator\",-774444018)], null);\r\n});\r\ndevtools.formatters.markup._LT_fields_details_row_GT_ = (function devtools$formatters$markup$_LT_fields_details_row_GT_(field){\r\nvar vec__57960 = field;\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57960,(0),null);\r\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57960,(1),null);\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-tr-tag\",\"body-field-tr-tag\",37280691),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td1-tag\",\"body-field-td1-tag\",256357429),new cljs.core.Keyword(null,\"body-field-symbol\",\"body-field-symbol\",256897537),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-name-tag\",\"body-field-name-tag\",917867601),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td2-tag\",\"body-field-td2-tag\",94501500),new cljs.core.Keyword(null,\"body-field-value-spacer\",\"body-field-value-spacer\",1279911362)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td3-tag\",\"body-field-td3-tag\",-803119922),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-value-tag\",\"body-field-value-tag\",800789079),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0))], null)], null)], null);\r\n});\r\ndevtools.formatters.markup._LT_fields_GT_ = (function devtools$formatters$markup$_LT_fields_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___58329 = arguments.length;\r\nvar i__4731__auto___58331 = (0);\r\nwhile(true){\r\nif((i__4731__auto___58331 < len__4730__auto___58329)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___58331]));\r\n\r\nvar G__58334 = (i__4731__auto___58331 + (1));\r\ni__4731__auto___58331 = G__58334;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fields,p__57965){\r\nvar vec__57966 = p__57965;\r\nvar max_fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57966,(0),null);\r\nif((cljs.core.count(fields) === (0))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-no-fields-symbol\",\"fields-header-no-fields-symbol\",-1749204979)], null);\r\n} else {\r\nvar max_fields__$1 = (function (){var or__4120__auto__ = max_fields;\r\nif(cljs.core.truth_(or__4120__auto__)){\r\nreturn or__4120__auto__;\r\n} else {\r\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-instance-header-fields\",\"max-instance-header-fields\",-126007269));\r\n}\r\n})();\r\nvar more_QMARK_ = (cljs.core.count(fields) > max_fields__$1);\r\nvar fields_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__57970){\r\nvar vec__57971 = p__57970;\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57971,(0),null);\r\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57971,(1),null);\r\nreturn devtools.formatters.markup._LT_field_GT_(name,value);\r\n}),cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fields__$1,fields));\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-open-symbol\",\"fields-header-open-symbol\",-26243798)], null),fields_markups,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((more_QMARK_)?new cljs.core.Keyword(null,\"more-fields-symbol\",\"more-fields-symbol\",720022882):null),new cljs.core.Keyword(null,\"fields-header-close-symbol\",\"fields-header-close-symbol\",1615181116)], null)], 0));\r\n}\r\n}));\r\n\r\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$applyTo = (function (seq57963){\r\nvar G__57964 = cljs.core.first(seq57963);\r\nvar seq57963__$1 = cljs.core.next(seq57963);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57964,seq57963__$1);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_fields_details_GT_ = (function devtools$formatters$markup$_LT_fields_details_GT_(fields,obj){\r\nvar protocols = devtools.munging.scan_protocols(obj);\r\nvar has_protocols_QMARK_ = (!(cljs.core.empty_QMARK_(protocols)));\r\nvar fields_markup = (((!((cljs.core.count(fields) === (0)))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-icon\",\"fields-icon\",-436030420),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-body-fields-table-tag\",\"instance-body-fields-table-tag\",1306340776)], null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_fields_details_row_GT_,fields))], null):null);\r\nvar protocols_list_markup = ((has_protocols_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocols-icon\",\"protocols-icon\",-517302494),devtools.formatters.markup._LT_protocols_list_GT_(obj,protocols)], null):null);\r\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(obj)], null);\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [fields_markup,protocols_list_markup,native_markup], null));\r\n});\r\ndevtools.formatters.markup._LT_instance_GT_ = (function devtools$formatters$markup$_LT_instance_GT_(value){\r\nvar constructor_fn = devtools.formatters.helpers.get_constructor(value);\r\nvar vec__57975 = devtools.munging.parse_constructor_info(constructor_fn);\r\nvar _ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57975,(0),null);\r\nvar _name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57975,(1),null);\r\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57975,(2),null);\r\nvar custom_printing_QMARK_ = (((!((value == null))))?(((((value.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === value.cljs$core$IPrintWithWriter$))))?true:false):false);\r\nvar type_markup = devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"instance-type-header-tag\",\"instance-type-header-tag\",-1015702989)], 0));\r\nvar fields = devtools.formatters.helpers.fetch_fields_values(value,basis);\r\nvar fields_markup = devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic(fields,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((custom_printing_QMARK_)?(0):null)], 0));\r\nvar fields_details_markup_fn = (function (){\r\nreturn devtools.formatters.markup._LT_fields_details_GT_(fields,value);\r\n});\r\nvar fields_preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-value-tag\",\"instance-value-tag\",-1739593896),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value,fields_markup,fields_details_markup_fn], 0))], null);\r\nvar custom_printing_markup = ((custom_printing_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-custom-printing-wrapper-tag\",\"instance-custom-printing-wrapper-tag\",1461890684),new cljs.core.Keyword(null,\"instance-custom-printing-background\",\"instance-custom-printing-background\",-248433646),devtools.formatters.markup.print_via_protocol(value,new cljs.core.Keyword(null,\"instance-custom-printing-tag\",\"instance-custom-printing-tag\",-67034432))], null):null);\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-header-tag\",\"instance-header-tag\",903623870),new cljs.core.Keyword(null,\"instance-header-background\",\"instance-header-background\",1510357287),fields_preview_markup,custom_printing_markup,type_markup], null);\r\n});\r\ndevtools.formatters.markup._LT_header_GT_ = (function devtools$formatters$markup$_LT_header_GT_(value){\r\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_preview_GT_(value)], 0));\r\n});\r\ndevtools.formatters.markup._LT_surrogate_header_GT_ = (function devtools$formatters$markup$_LT_surrogate_header_GT_(surrogate){\r\nvar or__4120__auto__ = devtools.formatters.templating.get_surrogate_header(surrogate);\r\nif(cljs.core.truth_(or__4120__auto__)){\r\nreturn or__4120__auto__;\r\n} else {\r\nreturn devtools.formatters.markup._LT_preview_GT_(devtools.formatters.templating.get_surrogate_target(surrogate));\r\n}\r\n});\r\ndevtools.formatters.markup._LT_surrogate_target_GT_ = (function devtools$formatters$markup$_LT_surrogate_target_GT_(surrogate){\r\nvar target = devtools.formatters.templating.get_surrogate_target(surrogate);\r\nif(cljs.core.seqable_QMARK_(target)){\r\nvar starting_index = devtools.formatters.templating.get_surrogate_start_index(surrogate);\r\nreturn devtools.formatters.markup._LT_details_GT_(target,starting_index);\r\n} else {\r\nreturn devtools.formatters.markup._LT_standard_body_reference_GT_(target);\r\n}\r\n});\r\ndevtools.formatters.markup._LT_surrogate_body_GT_ = (function devtools$formatters$markup$_LT_surrogate_body_GT_(surrogate){\r\nvar temp__5733__auto__ = devtools.formatters.templating.get_surrogate_body(surrogate);\r\nif(cljs.core.truth_(temp__5733__auto__)){\r\nvar body = temp__5733__auto__;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"target\",\"target\",253001721),body)){\r\nreturn devtools.formatters.markup._LT_surrogate_target_GT_(surrogate);\r\n} else {\r\nreturn body;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ndevtools.formatters.markup._LT_atomic_GT_ = (function devtools$formatters$markup$_LT_atomic_GT_(value){\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-nils\",\"render-nils\",1360008699),value,cljs.core.nil_QMARK_))){\r\nreturn devtools.formatters.markup._LT_nil_GT_();\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-bools\",\"render-bools\",1793659724),value,devtools.formatters.helpers.bool_QMARK_))){\r\nreturn devtools.formatters.markup._LT_bool_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-strings\",\"render-strings\",-1497177335),value,cljs.core.string_QMARK_))){\r\nreturn devtools.formatters.markup._LT_string_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-numbers\",\"render-numbers\",-1385392009),value,cljs.core.number_QMARK_))){\r\nreturn devtools.formatters.markup._LT_number_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-keywords\",\"render-keywords\",1200455875),value,cljs.core.keyword_QMARK_))){\r\nreturn devtools.formatters.markup._LT_keyword_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-symbols\",\"render-symbols\",-887705016),value,cljs.core.symbol_QMARK_))){\r\nreturn devtools.formatters.markup._LT_symbol_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-instances\",\"render-instances\",-1803579686),value,devtools.formatters.helpers.should_render_instance_QMARK_))){\r\nreturn devtools.formatters.markup._LT_instance_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-types\",\"render-types\",-129927851),value,devtools.formatters.helpers.cljs_type_QMARK_))){\r\nreturn devtools.formatters.markup._LT_standalone_type_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-functions\",\"render-functions\",1273333002),value,devtools.formatters.helpers.cljs_function_QMARK_))){\r\nreturn devtools.formatters.markup._LT_function_GT_(value);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\ndevtools.formatters.markup.get_markup_db = (function devtools$formatters$markup$get_markup_db(){\r\nif((devtools.formatters.markup._STAR_markup_db_STAR_ == null)){\r\n(devtools.formatters.markup._STAR_markup_db_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"aligned-body\",\"aligned-body\",-2124118747),new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),new cljs.core.Keyword(null,\"protocol-method-arities\",\"protocol-method-arities\",-545542044),new cljs.core.Keyword(null,\"surrogate-header\",\"surrogate-header\",1705524526),new cljs.core.Keyword(null,\"details\",\"details\",1956795411),new cljs.core.Keyword(null,\"more-protocols\",\"more-protocols\",359555207),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),new cljs.core.Keyword(null,\"fields-details\",\"fields-details\",-269572714),new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),new cljs.core.Keyword(null,\"string\",\"string\",-1989541586),new cljs.core.Keyword(null,\"standard-body\",\"standard-body\",-1563020798),new cljs.core.Keyword(null,\"type-basis\",\"type-basis\",-1825246054),new cljs.core.Keyword(null,\"bool\",\"bool\",1444635321),new cljs.core.Keyword(null,\"standalone-type\",\"standalone-type\",-802565278),new cljs.core.Keyword(null,\"preview\",\"preview\",451279890),new cljs.core.Keyword(null,\"header\",\"header\",119441134),new cljs.core.Keyword(null,\"protocol-method\",\"protocol-method\",1794903206),new cljs.core.Keyword(null,\"cljs-land\",\"cljs-land\",1255896927),new cljs.core.Keyword(null,\"type-basis-item\",\"type-basis-item\",-1662150132),new cljs.core.Keyword(null,\"protocol-method-arities-details\",\"protocol-method-arities-details\",1944702118),new cljs.core.Keyword(null,\"fields-details-row\",\"fields-details-row\",2066344936),new cljs.core.Keyword(null,\"standard-body-reference\",\"standard-body-reference\",1513301561),new cljs.core.Keyword(null,\"surrogate-body\",\"surrogate-body\",-1618569585),new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"protocol-method-arity\",\"protocol-method-arity\",-1861927833),new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),new cljs.core.Keyword(null,\"type-details\",\"type-details\",477755178),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587),new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),new cljs.core.Keyword(null,\"surrogate\",\"surrogate\",2122284260),new cljs.core.Keyword(null,\"protocols-list\",\"protocols-list\",371434187),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"instance\",\"instance\",-2121349050),new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),new cljs.core.Keyword(null,\"function-details\",\"function-details\",1501147310),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),new cljs.core.Keyword(null,\"arities\",\"arities\",-1781122917),new cljs.core.Keyword(null,\"header-expander\",\"header-expander\",-1606368578),new cljs.core.Keyword(null,\"list-details\",\"list-details\",46031799),new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),new cljs.core.Keyword(null,\"surrogate-target\",\"surrogate-target\",-1262730220),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(null,\"number\",\"number\",1570378438),new cljs.core.Keyword(null,\"protocol-details\",\"protocol-details\",-121549824)],[devtools.formatters.markup._LT_aligned_body_GT_,devtools.formatters.markup._LT_native_reference_GT_,devtools.formatters.markup._LT_reference_surrogate_GT_,devtools.formatters.markup._LT_keyword_GT_,devtools.formatters.markup._LT_protocol_method_arities_GT_,devtools.formatters.markup._LT_surrogate_header_GT_,devtools.formatters.markup._LT_details_GT_,devtools.formatters.markup._LT_more_protocols_GT_,devtools.formatters.markup._LT_field_GT_,devtools.formatters.markup._LT_symbol_GT_,devtools.formatters.markup._LT_fields_details_GT_,devtools.formatters.markup._LT_atomic_GT_,devtools.formatters.markup._LT_string_GT_,devtools.formatters.markup._LT_standard_body_GT_,devtools.formatters.markup._LT_type_basis_GT_,devtools.formatters.markup._LT_bool_GT_,devtools.formatters.markup._LT_standalone_type_GT_,devtools.formatters.markup._LT_preview_GT_,devtools.formatters.markup._LT_header_GT_,devtools.formatters.markup._LT_protocol_method_GT_,devtools.formatters.markup._LT_cljs_land_GT_,devtools.formatters.markup._LT_type_basis_item_GT_,devtools.formatters.markup._LT_protocol_method_arities_details_GT_,devtools.formatters.markup._LT_fields_details_row_GT_,devtools.formatters.markup._LT_standard_body_reference_GT_,devtools.formatters.markup._LT_surrogate_body_GT_,devtools.formatters.markup._LT_expandable_GT_,devtools.formatters.markup._LT_type_GT_,devtools.formatters.markup._LT_protocol_method_arity_GT_,devtools.formatters.markup._LT_raw_surrogate_GT_,devtools.formatters.markup._LT_type_details_GT_,devtools.formatters.markup._LT_list_GT_,devtools.formatters.markup._LT_meta_wrapper_GT_,devtools.formatters.markup._LT_protocol_GT_,devtools.formatters.markup._LT_index_GT_,devtools.formatters.markup._LT_surrogate_GT_,devtools.formatters.markup._LT_protocols_list_GT_,devtools.formatters.markup._LT_meta_GT_,devtools.formatters.markup._LT_instance_GT_,devtools.formatters.markup._LT_reference_GT_,devtools.formatters.markup._LT_function_details_GT_,devtools.formatters.markup._LT_function_GT_,devtools.formatters.markup._LT_arities_GT_,devtools.formatters.markup._LT_header_expander_GT_,devtools.formatters.markup._LT_list_details_GT_,devtools.formatters.markup._LT_circular_reference_GT_,devtools.formatters.markup._LT_surrogate_target_GT_,devtools.formatters.markup._LT_fields_GT_,devtools.formatters.markup._LT_nil_GT_,devtools.formatters.markup._LT_body_GT_,devtools.formatters.markup._LT_number_GT_,devtools.formatters.markup._LT_protocol_details_GT_]));\r\n} else {\r\n}\r\n\r\nreturn devtools.formatters.markup._STAR_markup_db_STAR_;\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/markup.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$emit-markup-db","~$devtools.formatters.markup"],"~:excludes",["~#set",[]],"~:macros",["^ ","^C",["^ ","~:arglists",["~#list",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","~:name","~$devtools.formatters.markup/emit-markup-db","~:ns","^D","~:macro",true]],"^J","^D","~:op","^L","~:imports",null,"~:requires",["^ ","~$devtools.formatters.helpers","^Q","~$devtools.formatters.printing","^R","~$devtools.formatters.state","^S","~$devtools.formatters.templating","^T","~$devtools.munging","^U","~$munging","^U","~$cljs.core","^W","~$goog","^X"],"~:seen",["^F",["~:require","~:require-macros"]],"~:uses",["^ ","~$expandable?","^Q","~$should-render?","^Q","~$set-managed-print-level","^S","~$bool?","^Q","~$cljs-instance?","^Q","~$get-surrogate-body","^T","~$get-constructor","^Q","~$managed-print-via-writer","^R","~$pref","^Q","~$wrap-arity","^Q","~$cljs-function?","^Q","~$get-more-marker","^Q","~$fetch-fields-values","^Q","~$managed-print-via-protocol","^R","~$abbreviated?","^Q","~$get-surrogate-header","^T","~$reset-depth-limits","^S","~$get-surrogate-target","^T","~$set-prevent-recursion","^S","~$get-surrogate-start-index","^T","~$abbreviate-long-string","^Q","~$cljs-type?","^Q","~$should-render-instance?","^Q"],"^[",["^ ","^D","^D","^W","^W","^U","^U","^V","^U"],"~:form",["^I",["~$ns","^D",["^I",["^[",["^D","~:refer",["^C"]]]],["^I",["^Z",["^Q","^1J",["^14","^1;","^1F","^15","^1G","^11","^1?","^1E","^17","^19","^12","^1<","^1:","^1="]],["^R","^1J",["^18","^1>"]],["^S","^1J",["^1C","^13","^1A"]],["^T","^1J",["^16","^1B","^1D","^1@"]],["^U","~:as","^V"]]]]],"~:flags",["^ ","^[",["^F",[]],"^Z",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^X","^W","^Q","^R","^S","^T","^U"]],"^L","^D","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/markup.cljs"],"~:compiled-at",1589213811408,"~:resource-name","devtools/formatters/markup.cljs","~:warnings",[],"~:source","(ns devtools.formatters.markup\n  (:require-macros [devtools.formatters.markup :refer [emit-markup-db]])\n  (:require [devtools.formatters.helpers :refer [bool? cljs-function? cljs-type? cljs-instance?\n                                                 should-render-instance? expandable? abbreviated?\n                                                 abbreviate-long-string get-constructor pref should-render?\n                                                 get-more-marker wrap-arity fetch-fields-values]]\n            [devtools.formatters.printing :refer [managed-print-via-writer managed-print-via-protocol]]\n            [devtools.formatters.state :refer [set-prevent-recursion set-managed-print-level reset-depth-limits]]\n            [devtools.formatters.templating :refer [get-surrogate-body\n                                                    get-surrogate-target\n                                                    get-surrogate-start-index\n                                                    get-surrogate-header]]\n            [devtools.munging :as munging]))\n\n; reusable hiccup-like templates\n\n(declare get-markup-db)\n\n; -- cljs printing  ---------------------------------------------------------------------------------------------------------\n\n(defn print-with [method value tag & [max-level]]\n  (let [job-fn #(method value tag (get-markup-db))]\n    (if (some? max-level)\n      (binding [*print-level* (inc max-level)]                                                                                ; when printing do at most print-level deep recursion\n        (job-fn))\n      (job-fn))))\n\n(defn print-via-writer [value tag & [max-level]]\n  (print-with managed-print-via-writer value tag max-level))\n\n(defn print-via-protocol [value tag & [max-level]]\n  (print-with managed-print-via-protocol value tag max-level))\n\n; -- references -------------------------------------------------------------------------------------------------------------\n\n(defn <expandable> [& children]\n  (let [inner-markup (concat [:expandable-inner-tag] children)]\n    [:expandable-tag :expandable-symbol inner-markup]))\n\n(defn <raw-surrogate> [& args]\n  (concat [\"surrogate\"] args))\n\n(defn <surrogate> [& [object header body start-index]]\n  (let [header (if (some? body) (<expandable> header) header)]\n    (<raw-surrogate> object header body start-index)))\n\n(defn <reference> [& args]\n  (concat [\"reference\"] args))\n\n(defn <reference-surrogate> [& args]\n  (<reference> (apply <surrogate> args)))\n\n(defn <circular-reference> [& children]\n  (<reference-surrogate> nil [:circular-reference-tag :circular-ref-icon] (concat [:circular-reference-body-tag] children)))\n\n(defn <native-reference> [object]\n  (let [reference (<reference> object #(set-prevent-recursion % true))]\n    [:native-reference-wrapper-tag :native-reference-background [:native-reference-tag reference]]))\n\n(defn <header-expander> [object]\n  (<reference> (<raw-surrogate> object :header-expander-symbol :target) reset-depth-limits))\n\n; -- simple markup ----------------------------------------------------------------------------------------------------------\n\n(defn <cljs-land> [& children]\n  (concat [:cljs-land-tag] children))\n\n(defn <nil> []\n  ; this code is duplicated in templating.cljs, see make-reference\n  [:nil-tag :nil-label])\n\n(defn <bool> [bool]\n  [:bool-tag (str bool)])\n\n(defn <keyword> [keyword]\n  [:keyword-tag (str keyword)])\n\n(defn <symbol> [symbol]\n  [:symbol-tag (str symbol)])\n\n(defn <number> [number]\n  (if (js/isFinite number)\n    (if (integer? number)\n      [:integer-tag number]\n      [:float-tag number])\n    (if (js/isNaN number)\n      [:float-nan-tag (pr-str number)]\n      [:float-infinity-tag (pr-str number)])))\n\n; -- string markup ----------------------------------------------------------------------------------------------------------\n\n(defn <string> [string]\n  (let [dq (pref :dq)\n        re-nl (js/RegExp. \"\\n\" \"g\")\n        nl-marker (pref :new-line-string-replacer)\n        inline-string (.replace string re-nl nl-marker)\n        max-inline-string-size (+ (pref :string-prefix-limit) (pref :string-postfix-limit))\n        quote-string (fn [s] (str dq s dq))\n        should-abbreviate? (> (count inline-string) max-inline-string-size)]\n    (if should-abbreviate?\n      (let [abbreviated-string (abbreviate-long-string inline-string\n                                                       (pref :string-abbreviation-marker)\n                                                       (pref :string-prefix-limit)\n                                                       (pref :string-postfix-limit))\n            abbreviated-string-markup [:string-tag (quote-string abbreviated-string)]\n            string-with-nl-markers (.replace string re-nl (str nl-marker \"\\n\"))\n            details-markup [:expanded-string-tag string-with-nl-markers]]\n        (<reference-surrogate> string abbreviated-string-markup details-markup))\n      [:string-tag (quote-string inline-string)])))\n\n; -- generic preview markup -------------------------------------------------------------------------------------------------\n\n(defn <preview> [value]\n  (print-via-writer value :header-tag (pref :max-print-level)))\n\n; -- body-related templates -------------------------------------------------------------------------------------------------\n\n(defn <body> [markup]\n  [:body-tag markup])\n\n(defn <aligned-body> [markups-lists]\n  (let [prepend-li-tag (fn [line]\n                         (if line\n                           (concat [:aligned-li-tag] line)))\n        aligned-lines (keep prepend-li-tag markups-lists)]\n    (<body> (concat [:standard-ol-no-margin-tag] aligned-lines))))\n\n(defn <standard-body> [markups-lists & [no-margin?]]\n  (let [ol-tag (if no-margin? :standard-ol-no-margin-tag :standard-ol-tag)\n        li-tag (if no-margin? :standard-li-no-margin-tag :standard-li-tag)\n        prepend-li-tag (fn [line]\n                         (if line\n                           (concat [li-tag] line)))\n        lines-markups (keep prepend-li-tag markups-lists)]\n    (concat [ol-tag] lines-markups)))\n\n(defn <standard-body-reference> [o]\n  (<standard-body> [[(<reference> o)]]))\n\n; -- generic details markup -------------------------------------------------------------------------------------------------\n\n(defn <index> [value]\n  [:index-tag value :line-index-separator])\n\n(defn- body-line [index value]\n  (let [index-markup (<index> index)\n        value-markup (print-via-writer value :item-tag (pref :body-line-max-print-level))]\n    [index-markup value-markup]))\n\n; TODO: this fn is screaming for rewrite\n(defn- prepare-body-lines [data starting-index]\n  (loop [work data\n         index starting-index\n         lines []]\n    (if (empty? work)\n      lines\n      (recur (rest work) (inc index) (conj lines (body-line index (first work)))))))\n\n(defn- body-lines [value starting-index]\n  (let [seq (seq value)\n        max-number-body-items (pref :max-number-body-items)\n        chunk (take max-number-body-items seq)\n        rest (drop max-number-body-items seq)\n        lines (prepare-body-lines chunk starting-index)\n        continue? (not (empty? (take 1 rest)))]\n    (if-not continue?\n      lines\n      (let [more-label-markup [:body-items-more-tag :body-items-more-label]\n            start-index (+ starting-index max-number-body-items)\n            more-markup (<reference-surrogate> rest more-label-markup :target start-index)]\n        (conj lines [more-markup])))))\n\n(defn <details> [value starting-index]\n  (let [has-continuation? (pos? starting-index)\n        body-markup (<standard-body> (body-lines value starting-index) has-continuation?)]\n    (if has-continuation?\n      body-markup\n      (<body> body-markup))))\n\n; -- generic list template --------------------------------------------------------------------------------------------------\n\n(defn <list-details> [items _opts]\n  (<aligned-body> (map list items)))\n\n(defn <list> [items max-count & [opts]]\n  (let [items-markups (take max-count items)\n        more-count (- (count items) max-count)\n        more? (pos? more-count)\n        separator (or (:separator opts) :list-separator)\n        more-symbol (if more?\n                      (if-let [more-symbol (:more-symbol opts)]\n                        (if (fn? more-symbol)\n                          (more-symbol more-count)\n                          more-symbol)\n                        (get-more-marker more-count)))\n        preview-markup (concat [(or (:tag opts) :list-tag)\n                                (or (:open-symbol opts) :list-open-symbol)]\n                               (interpose separator items-markups)\n                               (if more? [separator more-symbol])\n                               [(or (:close-symbol opts) :list-close-symbol)])]\n    (if more?\n      (let [details-markup (:details opts)\n            default-details-fn (partial <list-details> items opts)]\n        (<reference-surrogate> nil preview-markup (or details-markup default-details-fn)))\n      preview-markup)))\n\n; -- mete-related markup ----------------------------------------------------------------------------------------------------\n\n(defn <meta> [metadata]\n  (let [body-fn (fn [] [:meta-body-tag (<preview> metadata)])\n        header [:meta-header-tag \"meta\"]]\n    [:meta-reference-tag (<reference-surrogate> metadata header body-fn)]))                                                   ; body must be lazy, see #35\n\n(defn <meta-wrapper> [metadata & children]\n  (concat [:meta-wrapper-tag] children [(<meta> metadata)]))\n\n; -- function markup --------------------------------------------------------------------------------------------------------\n\n(defn <function-details> [fn-obj ns _name arities prefix]\n  {:pre [(fn? fn-obj)]}\n  (let [arities (map wrap-arity arities)\n        make-arity-markup-list (fn [arity]\n                                 [[:fn-multi-arity-args-indent-tag prefix]\n                                  [:fn-args-tag arity]])\n        arities-markupts-lists (if (> (count arities) 1) (map make-arity-markup-list arities))\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        native-markups-list [:native-icon (<native-reference> fn-obj)]]\n    (<aligned-body> (concat arities-markupts-lists [ns-markups-list native-markups-list]))))\n\n(defn <arities> [arities]\n  (let [multi-arity? (> (count arities) 1)]\n    [:fn-args-tag (wrap-arity (if multi-arity?\n                                (pref :multi-arity-symbol)\n                                (first arities)))]))\n\n(defn <function> [fn-obj]\n  {:pre [(fn? fn-obj)]}\n  (let [[ns name] (munging/parse-fn-info fn-obj)\n        lambda? (empty? name)\n        spacer-symbol (pref :spacer)\n        rest-symbol (pref :rest-symbol)\n        multi-arity-symbol (pref :multi-arity-symbol)\n        arities (munging/extract-arities fn-obj true spacer-symbol multi-arity-symbol rest-symbol)\n        arities-markup (<arities> arities)\n        name-markup (if-not lambda? [:fn-name-tag name])\n        icon-markup (if lambda? :lambda-icon :fn-icon)\n        prefix-markup [:fn-prefix-tag icon-markup name-markup]\n        preview-markup [:fn-header-tag prefix-markup arities-markup]\n        details-fn (partial <function-details> fn-obj ns name arities prefix-markup)]\n    (<reference-surrogate> fn-obj preview-markup details-fn)))\n\n; -- type markup ------------------------------------------------------------------------------------------------------------\n\n(defn <type-basis-item> [basis-item]\n  [:type-basis-item-tag (name basis-item)])\n\n(defn <type-basis> [basis]\n  (let [item-markups (map <type-basis-item> basis)\n        children-markups (interpose :type-basis-item-separator item-markups)]\n    (concat [:type-basis-tag] children-markups)))\n\n(defn <type-details> [constructor-fn ns _name basis]\n  (let [ns-markup (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        basis-markup (if (empty? basis)\n                       [:empty-basis-symbol]\n                       [:basis-icon (<type-basis> basis)])\n        native-markup [:native-icon (<native-reference> constructor-fn)]]\n    (<aligned-body> [basis-markup ns-markup native-markup])))\n\n(defn <type> [constructor-fn & [header-tag]]\n  (let [[ns name basis] (munging/parse-constructor-info constructor-fn)\n        name-markup [:type-name-tag name]\n        preview-markup [(or header-tag :type-header-tag) :type-symbol name-markup]\n        details-markup-fn (partial <type-details> constructor-fn ns name basis)]\n    [:type-wrapper-tag\n     :type-header-background\n     [:type-ref-tag (<reference-surrogate> constructor-fn preview-markup details-markup-fn)]]))\n\n(defn <standalone-type> [constructor-fn & [header-tag]]\n  [:standalone-type-tag (<type> constructor-fn header-tag)])\n\n; -- protocols markup -------------------------------------------------------------------------------------------------------\n\n(defn <protocol-method-arity> [arity-fn]\n  (<reference> arity-fn))\n\n(defn <protocol-method-arities-details> [fns]\n  (<aligned-body> (map <protocol-method-arity> fns)))\n\n(defn <protocol-method-arities> [fns & [max-fns]]\n  (let [max-fns (or max-fns (pref :max-protocol-method-arities-list))\n        more? (> (count fns) max-fns)\n        aritites-markups (map <protocol-method-arity> (take max-fns fns))\n        preview-markup (concat [:protocol-method-arities-header-tag :protocol-method-arities-header-open-symbol]\n                               (interpose :protocol-method-arities-list-header-separator aritites-markups)\n                               (if more? [:protocol-method-arities-more-symbol])\n                               [:protocol-method-arities-header-close-symbol])]\n    (if more?\n      (let [details-markup-fn (partial <protocol-method-arities-details> fns)]\n        (<reference-surrogate> nil preview-markup details-markup-fn))\n      preview-markup)))\n\n(defn <protocol-method> [name arities]\n  [:protocol-method-tag\n   :method-icon\n   [:protocol-method-name-tag name]\n   (<protocol-method-arities> arities)])\n\n(defn <protocol-details> [obj ns _name selector _fast?]\n  (let [protocol-obj (munging/get-protocol-object selector)\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:protocol-ns-name-tag ns]])\n        native-markups-list (if (some? protocol-obj) [:native-icon (<native-reference> protocol-obj)])\n        methods (munging/collect-protocol-methods obj selector)\n        methods-markups (map (fn [[name arities]] (<protocol-method> name arities)) methods)\n        methods-markups-lists (map list methods-markups)]\n    (<aligned-body> (concat methods-markups-lists [ns-markups-list native-markups-list]))))\n\n(defn <protocol> [obj protocol & [tag]]\n  (let [{:keys [ns name selector fast?]} protocol\n        preview-markup [(or tag :protocol-name-tag) name]\n        prefix-markup [(if fast? :fast-protocol-tag :slow-protocol-tag) :protocol-background]]\n    (if (some? obj)\n      (let [details-markup-fn (partial <protocol-details> obj ns name selector fast?)]\n        (conj prefix-markup (<reference-surrogate> obj preview-markup details-markup-fn)))\n      (conj prefix-markup preview-markup))))\n\n(defn <more-protocols> [more-count]\n  (let [fake-protocol {:name (get-more-marker more-count)}]\n    (<protocol> nil fake-protocol :protocol-more-tag)))\n\n(defn <protocols-list> [obj protocols & [max-protocols]]\n  (let [max-protocols (or max-protocols (pref :max-list-protocols))\n        protocols-markups (map (partial <protocol> obj) protocols)]\n    (<list> protocols-markups max-protocols {:tag          :protocols-header-tag\n                                             :open-symbol  :protocols-list-open-symbol\n                                             :close-symbol :protocols-list-close-symbol\n                                             :separator    :header-protocol-separator\n                                             :more-symbol  <more-protocols>})))\n\n; -- instance fields markup -------------------------------------------------------------------------------------------------\n\n(defn <field> [name value]\n  [:header-field-tag\n   [:header-field-name-tag (str name)]\n   :header-field-value-spacer\n   [:header-field-value-tag (<reference> (<surrogate> value) #(set-managed-print-level % 1))]\n   :header-field-separator])\n\n(defn <fields-details-row> [field]\n  (let [[name value] field]\n    [:body-field-tr-tag\n     [:body-field-td1-tag\n      :body-field-symbol\n      [:body-field-name-tag (str name)]]\n     [:body-field-td2-tag\n      :body-field-value-spacer]\n     [:body-field-td3-tag\n      [:body-field-value-tag (<reference-surrogate> value)]]]))\n\n(defn <fields> [fields & [max-fields]]\n  (if (zero? (count fields))\n    [:fields-header-tag :fields-header-no-fields-symbol]\n    (let [max-fields (or max-fields (pref :max-instance-header-fields))\n          more? (> (count fields) max-fields)\n          fields-markups (map (fn [[name value]] (<field> name value)) (take max-fields fields))]\n      (concat [:fields-header-tag\n               :fields-header-open-symbol]\n              fields-markups\n              [(if more? :more-fields-symbol)\n               :fields-header-close-symbol]))))\n\n(defn <fields-details> [fields obj]\n  (let [protocols (munging/scan-protocols obj)\n        has-protocols? (not (empty? protocols))\n        fields-markup (if-not (zero? (count fields))\n                        [:fields-icon (concat [:instance-body-fields-table-tag] (map <fields-details-row> fields))])\n        protocols-list-markup (if has-protocols? [:protocols-icon (<protocols-list> obj protocols)])\n        native-markup [:native-icon (<native-reference> obj)]]\n    (<aligned-body> [fields-markup protocols-list-markup native-markup])))\n\n; -- type/record instance markup --------------------------------------------------------------------------------------------\n\n(defn <instance> [value]\n  (let [constructor-fn (get-constructor value)\n        [_ns _name basis] (munging/parse-constructor-info constructor-fn)\n        custom-printing? (implements? IPrintWithWriter value)\n        type-markup (<type> constructor-fn :instance-type-header-tag)\n        fields (fetch-fields-values value basis)\n        fields-markup (<fields> fields (if custom-printing? 0))\n        fields-details-markup-fn #(<fields-details> fields value)\n        fields-preview-markup [:instance-value-tag (<reference-surrogate> value fields-markup fields-details-markup-fn)]\n        custom-printing-markup (if custom-printing?\n                                 [:instance-custom-printing-wrapper-tag\n                                  :instance-custom-printing-background\n                                  (print-via-protocol value :instance-custom-printing-tag)])]\n    [:instance-header-tag\n     :instance-header-background\n     fields-preview-markup\n     custom-printing-markup\n     type-markup]))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <header> [value]\n  (<cljs-land> (<preview> value)))\n\n(defn <surrogate-header> [surrogate]\n  (or (get-surrogate-header surrogate)\n      (<preview> (get-surrogate-target surrogate))))\n\n(defn <surrogate-target> [surrogate]\n  (let [target (get-surrogate-target surrogate)]\n    (if (seqable? target)\n      (let [starting-index (get-surrogate-start-index surrogate)]\n        (<details> target starting-index))\n      (<standard-body-reference> target))))\n\n(defn <surrogate-body> [surrogate]\n  (if-let [body (get-surrogate-body surrogate)]\n    (if (= :target body)\n      (<surrogate-target> surrogate)\n      body)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <atomic> [value]\n  (cond\n    (should-render? :render-nils value nil?) (<nil>)\n    (should-render? :render-bools value bool?) (<bool> value)\n    (should-render? :render-strings value string?) (<string> value)\n    (should-render? :render-numbers value number?) (<number> value)\n    (should-render? :render-keywords value keyword?) (<keyword> value)\n    (should-render? :render-symbols value symbol?) (<symbol> value)\n    (should-render? :render-instances value should-render-instance?) (<instance> value)\n    (should-render? :render-types value cljs-type?) (<standalone-type> value)\n    (should-render? :render-functions value cljs-function?) (<function> value)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(def ^:dynamic *markup-db*)\n\n; emit-markup-db macro will generate a map of all markup <functions> in this namespace:\n;\n;    {:atomic              <atomic>\n;     :reference           <reference>\n;     :native-reference    <native-reference>\n;     ...}\n;\n; we generate it only on first call and cache it in *markup-db*\n; emitting markup db statically into def would prevent dead-code elimination\n;\n(defn get-markup-db []\n  (if (nil? *markup-db*)\n    (set! *markup-db* (emit-markup-db)))\n  *markup-db*)\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","devtools.formatters.markup/print-with","p__57699","vec__57701","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","seq57684","G__57685","cljs.core/first","cljs.core/next","G__57686","G__57687","self__4717__auto__","method","value","tag","max-level","job-fn","G__57705","G__57706","G__57707","devtools.formatters.markup/get-markup-db","*print-level*-orig-val__57708","*print-level*-temp-val__57709","cljs.core/*print-level*","devtools.formatters.markup/print-via-writer","p__57726","vec__57727","seq57722","G__57723","G__57724","devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.printing/managed-print-via-writer","devtools.formatters.markup/print-via-protocol","p__57738","vec__57739","seq57731","G__57733","G__57734","devtools.formatters.printing/managed-print-via-protocol","devtools.formatters.markup/<expandable>","seq57742","self__4718__auto__","cljs.core/seq","children","inner-markup","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<raw-surrogate>","seq57750","args","devtools.formatters.markup/<surrogate>","p__57765","vec__57767","seq57761","object","header","body","start-index","devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<reference>","seq57772","devtools.formatters.markup/<reference-surrogate>","seq57775","devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<circular-reference>","seq57798","devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<native-reference>","reference","p1__57804#","devtools.formatters.state/set-prevent-recursion","devtools.formatters.markup/<header-expander>","devtools.formatters.state/reset-depth-limits","devtools.formatters.markup/<cljs-land>","seq57807","devtools.formatters.markup/<nil>","devtools.formatters.markup/<bool>","bool","devtools.formatters.markup/<keyword>","keyword","devtools.formatters.markup/<symbol>","symbol","devtools.formatters.markup/<number>","number","js/isFinite","cljs.core/integer?","js/isNaN","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<string>","string","dq","devtools.formatters.helpers/pref","re-nl","js/RegExp","nl-marker","inline-string","max-inline-string-size","quote-string","s","should-abbreviate?","cljs.core/count","abbreviated-string","devtools.formatters.helpers/abbreviate-long-string","abbreviated-string-markup","string-with-nl-markers","details-markup","devtools.formatters.markup/<preview>","devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<body>","markup","devtools.formatters.markup/<aligned-body>","markups-lists","prepend-li-tag","line","aligned-lines","cljs.core.keep.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<standard-body>","p__57830","vec__57831","seq57822","G__57823","no-margin?","ol-tag","li-tag","lines-markups","devtools.formatters.markup/<standard-body-reference>","o","devtools.formatters.markup/<index>","devtools.formatters.markup/body-line","index","index-markup","value-markup","devtools.formatters.markup/prepare-body-lines","data","starting-index","work","lines","cljs.core/empty?","cljs.core/rest","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/body-lines","seq","max-number-body-items","chunk","cljs.core.take.cljs$core$IFn$_invoke$arity$2","rest","cljs.core.drop.cljs$core$IFn$_invoke$arity$2","continue?","more-label-markup","more-markup","devtools.formatters.markup/<details>","has-continuation?","body-markup","devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<list-details>","items","_opts","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/list","devtools.formatters.markup/<list>","p__57847","vec__57848","seq57843","G__57844","G__57845","max-count","opts","items-markups","more-count","more?","separator","or__4120__auto__","more-symbol","temp__5733__auto__","cljs.core/fn?","devtools.formatters.helpers/get-more-marker","preview-markup","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","cljs.core.interpose.cljs$core$IFn$_invoke$arity$2","default-details-fn","cljs.core.partial.cljs$core$IFn$_invoke$arity$3","devtools.formatters.markup/<meta>","metadata","body-fn","devtools.formatters.markup/<meta-wrapper>","seq57865","G__57866","js/Error","devtools.formatters.markup/<function-details>","fn-obj","ns","_name","arities","prefix","devtools.formatters.helpers/wrap-arity","make-arity-markup-list","arity","arities-markupts-lists","ns-markups-list","native-markups-list","devtools.formatters.markup/<arities>","multi-arity?","devtools.formatters.markup/<function>","vec__57874","name","devtools.munging/parse-fn-info","lambda?","spacer-symbol","rest-symbol","multi-arity-symbol","devtools.munging/extract-arities","arities-markup","name-markup","icon-markup","prefix-markup","details-fn","cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<type-basis-item>","basis-item","cljs.core/name","devtools.formatters.markup/<type-basis>","basis","item-markups","children-markups","devtools.formatters.markup/<type-details>","constructor-fn","ns-markup","basis-markup","native-markup","devtools.formatters.markup/<type>","p__57889","vec__57890","seq57885","G__57886","header-tag","vec__57893","devtools.munging/parse-constructor-info","details-markup-fn","devtools.formatters.markup/<standalone-type>","p__57904","vec__57905","seq57901","G__57902","devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<protocol-method-arity>","arity-fn","devtools.formatters.markup/<protocol-method-arities-details>","fns","devtools.formatters.markup/<protocol-method-arities>","p__57911","vec__57912","seq57909","G__57910","max-fns","aritites-markups","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<protocol-method>","devtools.formatters.markup/<protocol-details>","obj","selector","_fast?","protocol-obj","devtools.munging/get-protocol-object","methods","devtools.munging/collect-protocol-methods","methods-markups","p__57925","vec__57926","methods-markups-lists","devtools.formatters.markup/<protocol>","p__57934","vec__57935","seq57930","G__57931","G__57932","protocol","map__57938","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","fast?","devtools.formatters.markup/<more-protocols>","fake-protocol","devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<protocols-list>","p__57952","vec__57953","seq57946","G__57947","G__57948","protocols","max-protocols","protocols-markups","devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<field>","p1__57958#","devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.state/set-managed-print-level","devtools.formatters.markup/<fields-details-row>","field","vec__57960","devtools.formatters.markup/<fields>","p__57965","vec__57966","seq57963","G__57964","fields","max-fields","fields-markups","p__57970","vec__57971","devtools.formatters.markup/<fields-details>","devtools.munging/scan-protocols","has-protocols?","fields-markup","protocols-list-markup","devtools.formatters.markup/<instance>","vec__57975","devtools.formatters.helpers/get-constructor","_ns","custom-printing?","type-markup","devtools.formatters.helpers/fetch-fields-values","devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic","fields-details-markup-fn","fields-preview-markup","custom-printing-markup","devtools.formatters.markup/<header>","devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<surrogate-header>","surrogate","devtools.formatters.templating/get-surrogate-header","devtools.formatters.templating/get-surrogate-target","devtools.formatters.markup/<surrogate-target>","target","cljs.core/seqable?","devtools.formatters.templating/get-surrogate-start-index","devtools.formatters.markup/<surrogate-body>","devtools.formatters.templating/get-surrogate-body","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<atomic>","devtools.formatters.helpers/should-render?","cljs.core/nil?","devtools.formatters.helpers/bool?","cljs.core/string?","cljs.core/number?","cljs.core/keyword?","cljs.core/symbol?","devtools.formatters.helpers/should-render-instance?","devtools.formatters.helpers/cljs-type?","devtools.formatters.helpers/cljs-function?","devtools.formatters.markup/*markup-db*","cljs.core/PersistentHashMap"]]],"~:cache-keys",["~#cmap",[["^M","~$devtools.defaults"],[1589208781000],["^1P","devtools/formatters/printing.cljs"],[1589208781405,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^X","^W","~$devtools.prefs","~$devtools.format","~$devtools.protocols","^S","^Q"]]],["^1P","goog/labs/useragent/platform.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","~$goog.labs.userAgent.util","~$goog.string"]]],["^M","^W"],[1589208773000],["^1P","devtools/formatters/markup.cljs"],[1589208781405,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W","^Q","^R","^S","^T","^U"]]],["^M","^D"],[1589208781000],["^1P","devtools/formatters/helpers.cljs"],[1589208781405,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W","^26","^U","^27","^28"]]],["^1P","goog/math/math.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","~$goog.array","~$goog.asserts"]]],["^1P","goog/labs/useragent/browser.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^2;","^29","~$goog.object","~$goog.string.internal"]]],["^1P","goog/array/array.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^2<"]]],["^M","~$devtools.version"],[1589208781000],["^1P","goog/useragent/useragent.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^29","~$goog.reflect","^2:"]]],["^1P","devtools/formatters/templating.cljs"],[1589208781405,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W","~$clojure.walk","~$devtools.util","^28","^Q","^S","~$clojure.string"]]],["^1P","goog/debug/error.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X"]]],["^1P","goog/dom/nodetype.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X"]]],["^1P","cljs/pprint.cljs"],[1589208773847,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W","^2F","^2:","~$goog.string.StringBuffer"]]],["^1P","goog/object/object.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X"]]],"~:SHADOW-TIMESTAMP",[1589208783000,1589208773000],["^1P","goog/math/long.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^2<","^2C"]]],["^1P","devtools/version.cljs"],[1589208781405,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W"]]],["^1P","goog/string/internal.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X"]]],["^1P","goog/functions/functions.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X"]]],["^1P","devtools/prefs.cljs"],[1589208781405,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W","^21"]]],["^1P","clojure/walk.cljs"],[1589208773847,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W"]]],["^1P","goog/structs/map.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^M","~$devtools.oops"],[1589208781000],["^1P","devtools/munging.cljs"],[1589208781405,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W","^2F","~$devtools.context","^2=","^2G"]]],["^1P","goog/labs/useragent/engine.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^2;","^29","^2:"]]],["^1P","goog/asserts/asserts.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^M","~$cljs.pprint"],[1589208773000],["^1P","goog/uri/uri.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^2;","^2<","^2:","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1P","goog/base.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",[]]],["^1P","goog/structs/structs.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^2;","^2="]]],["^1P","clojure/string.cljs"],[1589208773847,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W","^2:","^2G"]]],["^1P","devtools/formatters/state.cljs"],[1589208781405,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W"]]],["^1P","goog/string/string.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^2>"]]],["^M","^U"],[1589208781000],["^1P","clojure/data.cljs"],[1589208773847,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W","~$clojure.set"]]],["^1P","goog/reflect/reflect.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X"]]],["^1P","goog/labs/useragent/util.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^2>"]]],["^1P","goog/string/stringbuffer.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X"]]],["^1P","goog/iter/iter.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^2;","^2<","~$goog.functions","~$goog.math"]]],["^1P","devtools/defaults.cljs"],[1589208781405,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W"]]],["^M","^26"],[1589208781000],["^1P","cljs/core.cljs"],[1589208773847,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["~$goog.math.Long","~$goog.math.Integer","^2:","^2=","^2;","~$goog.Uri","^2G"]]],["^1P","devtools/context.cljs"],[1589208781405,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W"]]],["^1P","goog/math/integer.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X"]]],["^1P","devtools/format.cljs"],[1589208781405,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W","^2L"]]],["^M","~$devtools.compiler"],[1589208781000],["^1P","clojure/set.cljs"],[1589208773847,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W"]]],["^1P","goog/uri/utils.js"],[1589208774923,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^2;","^2<","^2:"]]],["^1P","devtools/protocols.cljs"],[1589208781405,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W"]]],["^1P","devtools/util.cljs"],[1589208781405,"^22",["^ ","^23",null,"^24",["^F",[]],"^25",["^X","^W","~$goog.userAgent","~$clojure.data","^2?","^2L","^2O","^26"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",["^ ","^C","^D"],"^E",["^F",[]],"^G",["^ ","^C",["^ ","^H",["^I",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","^J","^K","^L","^D","^M",true]],"^J","^D","^O",null,"^P",["^ ","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^U","^V","^U","^W","^W","^X","^X"],"^Y",["^F",["^Z","^["]],"~:shadow/js-access-global",["^F",["isNaN","RegExp","isFinite","Error"]],"^10",["^ ","^11","^Q","^12","^Q","^13","^S","^14","^Q","^15","^Q","^16","^T","^17","^Q","^18","^R","^19","^Q","^1:","^Q","^1;","^Q","^1<","^Q","^1=","^Q","^1>","^R","^1?","^Q","^1@","^T","^1A","^S","^1B","^T","^1C","^S","^1D","^T","^1E","^Q","^1F","^Q","^1G","^Q"],"~:defs",["^ ","~$<aligned-body>",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",121,"^8",7,"^9",121,"^:",21,"^H",["^I",["~$quote",["^I",[["~$markups-lists"]]]]]],"^J","~$devtools.formatters.markup/<aligned-body>","^6","devtools/formatters/markup.cljs","^:",21,"~:method-params",["^I",[["^38"]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^8",1,"~:variadic?",false,"^7",121,"~:ret-tag","~$cljs.core/IVector","^9",121,"~:max-fixed-arity",1,"~:fn-var",true,"^H",["^I",["^37",["^I",[["^38"]]]]]],"~$<native-reference>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",56,"^8",7,"^9",56,"^:",25,"^H",["^I",["^37",["^I",[["~$object"]]]]]],"^J","~$devtools.formatters.markup/<native-reference>","^6","devtools/formatters/markup.cljs","^:",25,"^3:",["^I",[["^3C"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",56,"^3>","^3?","^9",56,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^3C"]]]]]],"~$<reference-surrogate>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",50,"^8",7,"^9",50,"^:",28,"^H",["^I",["^37",["^I",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^3=",true,"~:fixed-arity",0,"^3@",0,"^3:",[["^I",["^3F"]]],"^H",["^I",[["~$&","^3F"]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<reference-surrogate>","^6","devtools/formatters/markup.cljs","^:",28,"^3G",["^ ","^3=",true,"^3H",0,"^3@",0,"^3:",[["^I",["^3F"]]],"^H",["^I",[["~$&","^3F"]]],"^3<",["^I",[null]]],"^3:",[["^I",["^3F"]]],"^3;",null,"^3H",0,"^3<",["^I",[null]],"^8",1,"^3=",true,"~:methods",[["^ ","^3H",0,"^3=",true,"~:tag","~$cljs.core/LazySeq"]],"^7",50,"^3>","~$any","^9",50,"^3@",0,"^3A",true,"^H",["^I",[["~$&","^3F"]]]],"~$<keyword>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",75,"^8",7,"^9",75,"^:",16,"^H",["^I",["^37",["^I",[["~$keyword"]]]]]],"^J","~$devtools.formatters.markup/<keyword>","^6","devtools/formatters/markup.cljs","^:",16,"^3:",["^I",[["^3O"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",75,"^3>","^3?","^9",75,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^3O"]]]]]],"~$print-via-writer",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",28,"^8",7,"^9",28,"^:",23,"^H",["^I",["^37",["^I",[["~$value","~$tag","~$&",["~$max-level"]]]]]],"^3G",["^ ","^3=",true,"^3H",2,"^3@",2,"^3:",[["^I",["^3R","^3S",["^3T"]]]],"^H",["^I",[["^3R","^3S","~$&",["^3T"]]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/print-via-writer","^6","devtools/formatters/markup.cljs","^:",23,"^3G",["^ ","^3=",true,"^3H",2,"^3@",2,"^3:",[["^I",["^3R","^3S",["^3T"]]]],"^H",["^I",[["^3R","^3S","~$&",["^3T"]]]],"^3<",["^I",[null]]],"^3:",[["^I",["^3R","^3S",["^3T"]]]],"^3;",null,"^3H",2,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",2,"^3=",true,"^3K",["^F",[null,"^3M"]]]],"^7",28,"^3>","^3M","^9",28,"^3@",2,"^3A",true,"^H",["^I",[["^3R","^3S","~$&",["^3T"]]]]],"~$<protocol-method-arities>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",290,"^8",7,"^9",290,"^:",32,"^H",["^I",["^37",["^I",[["~$fns","~$&",["~$max-fns"]]]]]],"^3G",["^ ","^3=",true,"^3H",1,"^3@",1,"^3:",[["^I",["^3W",["^3X"]]]],"^H",["^I",[["^3W","~$&",["^3X"]]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<protocol-method-arities>","^6","devtools/formatters/markup.cljs","^:",32,"^3G",["^ ","^3=",true,"^3H",1,"^3@",1,"^3:",[["^I",["^3W",["^3X"]]]],"^H",["^I",[["^3W","~$&",["^3X"]]]],"^3<",["^I",[null]]],"^3:",[["^I",["^3W",["^3X"]]]],"^3;",null,"^3H",1,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",1,"^3=",true,"^3K","^3L"]],"^7",290,"^3>","^3M","^9",290,"^3@",1,"^3A",true,"^H",["^I",[["^3W","~$&",["^3X"]]]]],"~$<surrogate-header>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",407,"^8",7,"^9",407,"^:",25,"^H",["^I",["^37",["^I",[["~$surrogate"]]]]]],"^J","~$devtools.formatters.markup/<surrogate-header>","^6","devtools/formatters/markup.cljs","^:",25,"^3:",["^I",[["^3["]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",407,"^3>",["^F",[null,"^3M"]],"^9",407,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^3["]]]]]],"~$<details>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",173,"^8",7,"^9",173,"^:",16,"^H",["^I",["^37",["^I",[["^3R","~$starting-index"]]]]]],"^J","~$devtools.formatters.markup/<details>","^6","devtools/formatters/markup.cljs","^:",16,"^3:",["^I",[["^3R","^42"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",173,"^3>","~$clj","^9",173,"^3@",2,"^3A",true,"^H",["^I",["^37",["^I",[["^3R","^42"]]]]]],"~$<more-protocols>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",327,"^8",7,"^9",327,"^:",23,"^H",["^I",["^37",["^I",[["~$more-count"]]]]]],"^J","~$devtools.formatters.markup/<more-protocols>","^6","devtools/formatters/markup.cljs","^:",23,"^3:",["^I",[["^46"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",327,"^3>","^44","^9",327,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^46"]]]]]],"~$<field>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",342,"^8",7,"^9",342,"^:",14,"^H",["^I",["^37",["^I",[["~$name","^3R"]]]]]],"^J","~$devtools.formatters.markup/<field>","^6","devtools/formatters/markup.cljs","^:",14,"^3:",["^I",[["^49","^3R"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",342,"^3>","^3?","^9",342,"^3@",2,"^3A",true,"^H",["^I",["^37",["^I",[["^49","^3R"]]]]]],"~$<symbol>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",78,"^8",7,"^9",78,"^:",15,"^H",["^I",["^37",["^I",[["~$symbol"]]]]]],"^J","~$devtools.formatters.markup/<symbol>","^6","devtools/formatters/markup.cljs","^:",15,"^3:",["^I",[["^4<"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",78,"^3>","^3?","^9",78,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^4<"]]]]]],"~$<fields-details>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",372,"^8",7,"^9",372,"^:",23,"^H",["^I",["^37",["^I",[["~$fields","~$obj"]]]]]],"^J","~$devtools.formatters.markup/<fields-details>","^6","devtools/formatters/markup.cljs","^:",23,"^3:",["^I",[["^4?","^4@"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",372,"^3>","^3?","^9",372,"^3@",2,"^3A",true,"^H",["^I",["^37",["^I",[["^4?","^4@"]]]]]],"~$<atomic>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",426,"^8",7,"^9",426,"^:",15,"^H",["^I",["^37",["^I",[["^3R"]]]]]],"^J","~$devtools.formatters.markup/<atomic>","^6","devtools/formatters/markup.cljs","^:",15,"^3:",["^I",[["^3R"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",426,"^3>",["^F",["^44","^3?","^3L","~$clj-nil"]],"^9",426,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^3R"]]]]]],"~$<string>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",92,"^8",7,"^9",92,"^:",15,"^H",["^I",["^37",["^I",[["~$string"]]]]]],"^J","~$devtools.formatters.markup/<string>","^6","devtools/formatters/markup.cljs","^:",15,"^3:",["^I",[["^4F"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",92,"^3>","^44","^9",92,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^4F"]]]]]],"~$<standard-body>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",128,"^8",7,"^9",128,"^:",22,"^H",["^I",["^37",["^I",[["^38","~$&",["~$no-margin?"]]]]]],"^3G",["^ ","^3=",true,"^3H",1,"^3@",1,"^3:",[["^I",["^38",["^4I"]]]],"^H",["^I",[["^38","~$&",["^4I"]]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<standard-body>","^6","devtools/formatters/markup.cljs","^:",22,"^3G",["^ ","^3=",true,"^3H",1,"^3@",1,"^3:",[["^I",["^38",["^4I"]]]],"^H",["^I",[["^38","~$&",["^4I"]]]],"^3<",["^I",[null]]],"^3:",[["^I",["^38",["^4I"]]]],"^3;",null,"^3H",1,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",1,"^3=",true,"^3K","^3L"]],"^7",128,"^3>","^3M","^9",128,"^3@",1,"^3A",true,"^H",["^I",[["^38","~$&",["^4I"]]]]],"~$<type-basis>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",257,"^8",7,"^9",257,"^:",19,"^H",["^I",["^37",["^I",[["~$basis"]]]]]],"^J","~$devtools.formatters.markup/<type-basis>","^6","devtools/formatters/markup.cljs","^:",19,"^3:",["^I",[["^4L"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",257,"^3>","^3L","^9",257,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^4L"]]]]]],"~$*markup-db*",["^ ","^5",["^ ","^6","devtools/formatters/markup.cljs","^7",440,"^8",16,"^9",440,"^:",27,"~:dynamic",true],"^J","~$devtools.formatters.markup/*markup-db*","^6","devtools/formatters/markup.cljs","^:",27,"^8",1,"^4O",true,"^7",440,"^9",440,"^3K","^3M"],"~$print-via-protocol",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",31,"^8",7,"^9",31,"^:",25,"^H",["^I",["^37",["^I",[["^3R","^3S","~$&",["^3T"]]]]]],"^3G",["^ ","^3=",true,"^3H",2,"^3@",2,"^3:",[["^I",["^3R","^3S",["^3T"]]]],"^H",["^I",[["^3R","^3S","~$&",["^3T"]]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/print-via-protocol","^6","devtools/formatters/markup.cljs","^:",25,"^3G",["^ ","^3=",true,"^3H",2,"^3@",2,"^3:",[["^I",["^3R","^3S",["^3T"]]]],"^H",["^I",[["^3R","^3S","~$&",["^3T"]]]],"^3<",["^I",[null]]],"^3:",[["^I",["^3R","^3S",["^3T"]]]],"^3;",null,"^3H",2,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",2,"^3=",true,"^3K",["^F",[null,"^3M"]]]],"^7",31,"^3>","^3M","^9",31,"^3@",2,"^3A",true,"^H",["^I",[["^3R","^3S","~$&",["^3T"]]]]],"~$print-with",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",21,"^8",7,"^9",21,"^:",17,"^H",["^I",["^37",["^I",[["~$method","^3R","^3S","~$&",["^3T"]]]]]],"^3G",["^ ","^3=",true,"^3H",3,"^3@",3,"^3:",[["^I",["^4T","^3R","^3S",["^3T"]]]],"^H",["^I",[["^4T","^3R","^3S","~$&",["^3T"]]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/print-with","^6","devtools/formatters/markup.cljs","^:",17,"^3G",["^ ","^3=",true,"^3H",3,"^3@",3,"^3:",[["^I",["^4T","^3R","^3S",["^3T"]]]],"^H",["^I",[["^4T","^3R","^3S","~$&",["^3T"]]]],"^3<",["^I",[null]]],"^3:",[["^I",["^4T","^3R","^3S",["^3T"]]]],"^3;",null,"^3H",3,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",3,"^3=",true,"^3K",["^F",[null,"^3M"]]]],"^7",21,"^3>","^3M","^9",21,"^3@",3,"^3A",true,"^H",["^I",[["^4T","^3R","^3S","~$&",["^3T"]]]]],"~$<bool>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",72,"^8",7,"^9",72,"^:",13,"^H",["^I",["^37",["^I",[["~$bool"]]]]]],"^J","~$devtools.formatters.markup/<bool>","^6","devtools/formatters/markup.cljs","^:",13,"^3:",["^I",[["^4W"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",72,"^3>","^3?","^9",72,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^4W"]]]]]],"~$<standalone-type>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",279,"^8",7,"^9",279,"^:",24,"^H",["^I",["^37",["^I",[["~$constructor-fn","~$&",["~$header-tag"]]]]]],"^3G",["^ ","^3=",true,"^3H",1,"^3@",1,"^3:",[["^I",["^4Z",["^4["]]]],"^H",["^I",[["^4Z","~$&",["^4["]]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<standalone-type>","^6","devtools/formatters/markup.cljs","^:",24,"^3G",["^ ","^3=",true,"^3H",1,"^3@",1,"^3:",[["^I",["^4Z",["^4["]]]],"^H",["^I",[["^4Z","~$&",["^4["]]]],"^3<",["^I",[null]]],"^3:",[["^I",["^4Z",["^4["]]]],"^3;",null,"^3H",1,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",1,"^3=",true,"^3K","^3?"]],"^7",279,"^3>","^3M","^9",279,"^3@",1,"^3A",true,"^H",["^I",[["^4Z","~$&",["^4["]]]]],"~$<preview>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",113,"^8",7,"^9",113,"^:",16,"^H",["^I",["^37",["^I",[["^3R"]]]]]],"^J","~$devtools.formatters.markup/<preview>","^6","devtools/formatters/markup.cljs","^:",16,"^3:",["^I",[["^3R"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",113,"^3>",["^F",[null,"^3M"]],"^9",113,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^3R"]]]]]],"~$<header>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",404,"^8",7,"^9",404,"^:",15,"^H",["^I",["^37",["^I",[["^3R"]]]]]],"^J","~$devtools.formatters.markup/<header>","^6","devtools/formatters/markup.cljs","^:",15,"^3:",["^I",[["^3R"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",404,"^3>","^3L","^9",404,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^3R"]]]]]],"~$<protocol-method>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",303,"^8",7,"^9",303,"^:",24,"^H",["^I",["^37",["^I",[["^49","~$arities"]]]]]],"^J","~$devtools.formatters.markup/<protocol-method>","^6","devtools/formatters/markup.cljs","^:",24,"^3:",["^I",[["^49","^56"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",303,"^3>","^3?","^9",303,"^3@",2,"^3A",true,"^H",["^I",["^37",["^I",[["^49","^56"]]]]]],"~$<cljs-land>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",65,"^8",7,"^9",65,"^:",18,"^H",["^I",["^37",["^I",[["~$&","~$children"]]]]],"^3G",["^ ","^3=",true,"^3H",0,"^3@",0,"^3:",[["^I",["^59"]]],"^H",["^I",[["~$&","^59"]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<cljs-land>","^6","devtools/formatters/markup.cljs","^:",18,"^3G",["^ ","^3=",true,"^3H",0,"^3@",0,"^3:",[["^I",["^59"]]],"^H",["^I",[["~$&","^59"]]],"^3<",["^I",[null]]],"^3:",[["^I",["^59"]]],"^3;",null,"^3H",0,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",0,"^3=",true,"^3K","^3L"]],"^7",65,"^3>","^3M","^9",65,"^3@",0,"^3A",true,"^H",["^I",[["~$&","^59"]]]],"~$<type-basis-item>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",254,"^8",7,"^9",254,"^:",24,"^H",["^I",["^37",["^I",[["~$basis-item"]]]]]],"^J","~$devtools.formatters.markup/<type-basis-item>","^6","devtools/formatters/markup.cljs","^:",24,"^3:",["^I",[["^5<"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",254,"^3>","^3?","^9",254,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^5<"]]]]]],"~$<protocol-method-arities-details>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",287,"^8",7,"^9",287,"^:",40,"^H",["^I",["^37",["^I",[["^3W"]]]]]],"^J","~$devtools.formatters.markup/<protocol-method-arities-details>","^6","devtools/formatters/markup.cljs","^:",40,"^3:",["^I",[["^3W"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",287,"^3>","^3?","^9",287,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^3W"]]]]]],"~$<fields-details-row>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",349,"^8",7,"^9",349,"^:",27,"^H",["^I",["^37",["^I",[["~$field"]]]]]],"^J","~$devtools.formatters.markup/<fields-details-row>","^6","devtools/formatters/markup.cljs","^:",27,"^3:",["^I",[["^5A"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",349,"^3>","^3?","^9",349,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^5A"]]]]]],"~$<standard-body-reference>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",137,"^8",7,"^9",137,"^:",32,"^H",["^I",["^37",["^I",[["~$o"]]]]]],"^J","~$devtools.formatters.markup/<standard-body-reference>","^6","devtools/formatters/markup.cljs","^:",32,"^3:",["^I",[["~$o"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",137,"^3>","^3L","^9",137,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["~$o"]]]]]],"~$<surrogate-body>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",418,"^8",7,"^9",418,"^:",23,"^H",["^I",["^37",["^I",[["^3["]]]]]],"^J","~$devtools.formatters.markup/<surrogate-body>","^6","devtools/formatters/markup.cljs","^:",23,"^3:",["^I",[["^3["]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",418,"^3>",["^F",["^44","^3M","^4D"]],"^9",418,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^3["]]]]]],"~$get-markup-db",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",452,"^8",7,"^9",452,"^:",20,"^H",["^I",["^37",["^I",[[]]]]]],"^J","~$devtools.formatters.markup/get-markup-db","^6","devtools/formatters/markup.cljs","^:",20,"^3:",["^I",[[]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",452,"^3>","^3M","^9",452,"^3@",0,"^3A",true,"^H",["^I",["^37",["^I",[[]]]]]],"~$<expandable>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",36,"^8",7,"^9",36,"^:",19,"^H",["^I",["^37",["^I",[["~$&","^59"]]]]],"^3G",["^ ","^3=",true,"^3H",0,"^3@",0,"^3:",[["^I",["^59"]]],"^H",["^I",[["~$&","^59"]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<expandable>","^6","devtools/formatters/markup.cljs","^:",19,"^3G",["^ ","^3=",true,"^3H",0,"^3@",0,"^3:",[["^I",["^59"]]],"^H",["^I",[["~$&","^59"]]],"^3<",["^I",[null]]],"^3:",[["^I",["^59"]]],"^3;",null,"^3H",0,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",0,"^3=",true,"^3K","^3?"]],"^7",36,"^3>","^3M","^9",36,"^3@",0,"^3A",true,"^H",["^I",[["~$&","^59"]]]],"~$<type>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",270,"^8",7,"^9",270,"^:",13,"^H",["^I",["^37",["^I",[["^4Z","~$&",["^4["]]]]]],"^3G",["^ ","^3=",true,"^3H",1,"^3@",1,"^3:",[["^I",["^4Z",["^4["]]]],"^H",["^I",[["^4Z","~$&",["^4["]]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<type>","^6","devtools/formatters/markup.cljs","^:",13,"^3G",["^ ","^3=",true,"^3H",1,"^3@",1,"^3:",[["^I",["^4Z",["^4["]]]],"^H",["^I",[["^4Z","~$&",["^4["]]]],"^3<",["^I",[null]]],"^3:",[["^I",["^4Z",["^4["]]]],"^3;",null,"^3H",1,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",1,"^3=",true,"^3K","^3?"]],"^7",270,"^3>","^3M","^9",270,"^3@",1,"^3A",true,"^H",["^I",[["^4Z","~$&",["^4["]]]]],"~$<protocol-method-arity>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",284,"^8",7,"^9",284,"^:",30,"^H",["^I",["^37",["^I",[["~$arity-fn"]]]]]],"^J","~$devtools.formatters.markup/<protocol-method-arity>","^6","devtools/formatters/markup.cljs","^:",30,"^3:",["^I",[["^5N"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",284,"^3>","^3L","^9",284,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^5N"]]]]]],"~$<raw-surrogate>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",40,"^8",7,"^9",40,"^:",22,"^H",["^I",["^37",["^I",[["~$&","^3F"]]]]],"^3G",["^ ","^3=",true,"^3H",0,"^3@",0,"^3:",[["^I",["^3F"]]],"^H",["^I",[["~$&","^3F"]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<raw-surrogate>","^6","devtools/formatters/markup.cljs","^:",22,"^3G",["^ ","^3=",true,"^3H",0,"^3@",0,"^3:",[["^I",["^3F"]]],"^H",["^I",[["~$&","^3F"]]],"^3<",["^I",[null]]],"^3:",[["^I",["^3F"]]],"^3;",null,"^3H",0,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",0,"^3=",true,"^3K","^3L"]],"^7",40,"^3>","^3M","^9",40,"^3@",0,"^3A",true,"^H",["^I",[["~$&","^3F"]]]],"~$<type-details>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",262,"^8",7,"^9",262,"^:",21,"^H",["^I",["^37",["^I",[["^4Z","^1I","~$_name","^4L"]]]]]],"^J","~$devtools.formatters.markup/<type-details>","^6","devtools/formatters/markup.cljs","^:",21,"^3:",["^I",[["^4Z","^1I","^5S","^4L"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",262,"^3>","^3?","^9",262,"^3@",4,"^3A",true,"^H",["^I",["^37",["^I",[["^4Z","^1I","^5S","^4L"]]]]]],"~$<list>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",185,"^8",7,"^9",185,"^:",13,"^H",["^I",["^37",["^I",[["~$items","~$max-count","~$&",["~$opts"]]]]]],"^3G",["^ ","^3=",true,"^3H",2,"^3@",2,"^3:",[["^I",["^5V","^5W",["^5X"]]]],"^H",["^I",[["^5V","^5W","~$&",["^5X"]]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<list>","^6","devtools/formatters/markup.cljs","^:",13,"^3G",["^ ","^3=",true,"^3H",2,"^3@",2,"^3:",[["^I",["^5V","^5W",["^5X"]]]],"^H",["^I",[["^5V","^5W","~$&",["^5X"]]]],"^3<",["^I",[null]]],"^3:",[["^I",["^5V","^5W",["^5X"]]]],"^3;",null,"^3H",2,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",2,"^3=",true,"^3K","^3L"]],"^7",185,"^3>","^3M","^9",185,"^3@",2,"^3A",true,"^H",["^I",[["^5V","^5W","~$&",["^5X"]]]]],"~$<meta-wrapper>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",214,"^8",7,"^9",214,"^:",21,"^H",["^I",["^37",["^I",[["~$metadata","~$&","^59"]]]]],"^3G",["^ ","^3=",true,"^3H",1,"^3@",1,"^3:",[["^I",["^5[","^59"]]],"^H",["^I",[["^5[","~$&","^59"]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<meta-wrapper>","^6","devtools/formatters/markup.cljs","^:",21,"^3G",["^ ","^3=",true,"^3H",1,"^3@",1,"^3:",[["^I",["^5[","^59"]]],"^H",["^I",[["^5[","~$&","^59"]]],"^3<",["^I",[null]]],"^3:",[["^I",["^5[","^59"]]],"^3;",null,"^3H",1,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",1,"^3=",true,"^3K","^3L"]],"^7",214,"^3>","^3M","^9",214,"^3@",1,"^3A",true,"^H",["^I",[["^5[","~$&","^59"]]]],"~$<protocol>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",318,"^8",7,"^9",318,"^:",17,"^H",["^I",["^37",["^I",[["^4@","~$protocol","~$&",["^3S"]]]]]],"^3G",["^ ","^3=",true,"^3H",2,"^3@",2,"^3:",[["^I",["^4@","^62",["^3S"]]]],"^H",["^I",[["^4@","^62","~$&",["^3S"]]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<protocol>","^6","devtools/formatters/markup.cljs","^:",17,"^3G",["^ ","^3=",true,"^3H",2,"^3@",2,"^3:",[["^I",["^4@","^62",["^3S"]]]],"^H",["^I",[["^4@","^62","~$&",["^3S"]]]],"^3<",["^I",[null]]],"^3:",[["^I",["^4@","^62",["^3S"]]]],"^3;",null,"^3H",2,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",2,"^3=",true,"^3K","^44"]],"^7",318,"^3>","^3M","^9",318,"^3@",2,"^3A",true,"^H",["^I",[["^4@","^62","~$&",["^3S"]]]]],"~$<index>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",142,"^8",7,"^9",142,"^:",14,"^H",["^I",["^37",["^I",[["^3R"]]]]]],"^J","~$devtools.formatters.markup/<index>","^6","devtools/formatters/markup.cljs","^:",14,"^3:",["^I",[["^3R"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",142,"^3>","^3?","^9",142,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^3R"]]]]]],"~$<surrogate>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",43,"^8",7,"^9",43,"^:",18,"^H",["^I",["^37",["^I",[["~$&",["^3C","~$header","~$body","~$start-index"]]]]]],"^3G",["^ ","^3=",true,"^3H",0,"^3@",0,"^3:",[["^I",[["^3C","^67","^68","^69"]]]],"^H",["^I",[["~$&",["^3C","^67","^68","^69"]]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<surrogate>","^6","devtools/formatters/markup.cljs","^:",18,"^3G",["^ ","^3=",true,"^3H",0,"^3@",0,"^3:",[["^I",[["^3C","^67","^68","^69"]]]],"^H",["^I",[["~$&",["^3C","^67","^68","^69"]]]],"^3<",["^I",[null]]],"^3:",[["^I",[["^3C","^67","^68","^69"]]]],"^3;",null,"^3H",0,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",0,"^3=",true,"^3K","^3L"]],"^7",43,"^3>","^3M","^9",43,"^3@",0,"^3A",true,"^H",["^I",[["~$&",["^3C","^67","^68","^69"]]]]],"~$<protocols-list>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",331,"^8",7,"^9",331,"^:",23,"^H",["^I",["^37",["^I",[["^4@","~$protocols","~$&",["~$max-protocols"]]]]]],"^3G",["^ ","^3=",true,"^3H",2,"^3@",2,"^3:",[["^I",["^4@","^6<",["^6="]]]],"^H",["^I",[["^4@","^6<","~$&",["^6="]]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<protocols-list>","^6","devtools/formatters/markup.cljs","^:",23,"^3G",["^ ","^3=",true,"^3H",2,"^3@",2,"^3:",[["^I",["^4@","^6<",["^6="]]]],"^H",["^I",[["^4@","^6<","~$&",["^6="]]]],"^3<",["^I",[null]]],"^3:",[["^I",["^4@","^6<",["^6="]]]],"^3;",null,"^3H",2,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",2,"^3=",true,"^3K","^3L"]],"^7",331,"^3>","^3M","^9",331,"^3@",2,"^3A",true,"^H",["^I",[["^4@","^6<","~$&",["^6="]]]]],"~$<meta>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",209,"^8",7,"^9",209,"^:",13,"^H",["^I",["^37",["^I",[["^5["]]]]]],"^J","~$devtools.formatters.markup/<meta>","^6","devtools/formatters/markup.cljs","^:",13,"^3:",["^I",[["^5["]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",209,"^3>","^3?","^9",209,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^5["]]]]]],"~$<instance>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",383,"^8",7,"^9",383,"^:",17,"^H",["^I",["^37",["^I",[["^3R"]]]]]],"^J","~$devtools.formatters.markup/<instance>","^6","devtools/formatters/markup.cljs","^:",17,"^3:",["^I",[["^3R"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",383,"^3>","^3?","^9",383,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^3R"]]]]]],"~$<reference>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",47,"^8",7,"^9",47,"^:",18,"^H",["^I",["^37",["^I",[["~$&","^3F"]]]]],"^3G",["^ ","^3=",true,"^3H",0,"^3@",0,"^3:",[["^I",["^3F"]]],"^H",["^I",[["~$&","^3F"]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<reference>","^6","devtools/formatters/markup.cljs","^:",18,"^3G",["^ ","^3=",true,"^3H",0,"^3@",0,"^3:",[["^I",["^3F"]]],"^H",["^I",[["~$&","^3F"]]],"^3<",["^I",[null]]],"^3:",[["^I",["^3F"]]],"^3;",null,"^3H",0,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",0,"^3=",true,"^3K","^3L"]],"^7",47,"^3>","^3M","^9",47,"^3@",0,"^3A",true,"^H",["^I",[["~$&","^3F"]]]],"~$<function-details>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",219,"^8",7,"^9",219,"^:",25,"^H",["^I",["^37",["^I",[["~$fn-obj","^1I","^5S","^56","~$prefix"]]]]]],"^J","~$devtools.formatters.markup/<function-details>","^6","devtools/formatters/markup.cljs","^:",25,"^3:",["^I",[["^6F","^1I","^5S","^56","^6G"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",219,"^3>","^3?","^9",219,"^3@",5,"^3A",true,"^H",["^I",["^37",["^I",[["^6F","^1I","^5S","^56","^6G"]]]]]],"~$<function>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",236,"^8",7,"^9",236,"^:",17,"^H",["^I",["^37",["^I",[["^6F"]]]]]],"^J","~$devtools.formatters.markup/<function>","^6","devtools/formatters/markup.cljs","^:",17,"^3:",["^I",[["^6F"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",236,"^3>","^3L","^9",236,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^6F"]]]]]],"~$<arities>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",230,"^8",7,"^9",230,"^:",16,"^H",["^I",["^37",["^I",[["^56"]]]]]],"^J","~$devtools.formatters.markup/<arities>","^6","devtools/formatters/markup.cljs","^:",16,"^3:",["^I",[["^56"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",230,"^3>","^3?","^9",230,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^56"]]]]]],"~$<header-expander>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",60,"^8",7,"^9",60,"^:",24,"^H",["^I",["^37",["^I",[["^3C"]]]]]],"^J","~$devtools.formatters.markup/<header-expander>","^6","devtools/formatters/markup.cljs","^:",24,"^3:",["^I",[["^3C"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",60,"^3>","^3L","^9",60,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^3C"]]]]]],"~$<list-details>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",182,"^8",7,"^9",182,"^:",21,"^H",["^I",["^37",["^I",[["^5V","~$_opts"]]]]]],"^J","~$devtools.formatters.markup/<list-details>","^6","devtools/formatters/markup.cljs","^:",21,"^3:",["^I",[["^5V","^6P"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",182,"^3>","^3?","^9",182,"^3@",2,"^3A",true,"^H",["^I",["^37",["^I",[["^5V","^6P"]]]]]],"~$<circular-reference>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",53,"^8",7,"^9",53,"^:",27,"^H",["^I",["^37",["^I",[["~$&","^59"]]]]],"^3G",["^ ","^3=",true,"^3H",0,"^3@",0,"^3:",[["^I",["^59"]]],"^H",["^I",[["~$&","^59"]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<circular-reference>","^6","devtools/formatters/markup.cljs","^:",27,"^3G",["^ ","^3=",true,"^3H",0,"^3@",0,"^3:",[["^I",["^59"]]],"^H",["^I",[["~$&","^59"]]],"^3<",["^I",[null]]],"^3:",[["^I",["^59"]]],"^3;",null,"^3H",0,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",0,"^3=",true,"^3K","^3L"]],"^7",53,"^3>","^3M","^9",53,"^3@",0,"^3A",true,"^H",["^I",[["~$&","^59"]]]],"~$<surrogate-target>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",411,"^8",7,"^9",411,"^:",25,"^H",["^I",["^37",["^I",[["^3["]]]]]],"^J","~$devtools.formatters.markup/<surrogate-target>","^6","devtools/formatters/markup.cljs","^:",25,"^3:",["^I",[["^3["]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",411,"^3>","^44","^9",411,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^3["]]]]]],"~$body-line",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",145,"^8",8,"^9",145,"^:",17,"~:private",true,"^H",["^I",["^37",["^I",[["~$index","^3R"]]]]]],"^6W",true,"^J","~$devtools.formatters.markup/body-line","^6","devtools/formatters/markup.cljs","^:",17,"^3:",["^I",[["^6X","^3R"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",145,"^3>","^3?","^9",145,"^3@",2,"^3A",true,"^H",["^I",["^37",["^I",[["^6X","^3R"]]]]]],"~$body-lines",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",159,"^8",8,"^9",159,"^:",18,"^6W",true,"^H",["^I",["^37",["^I",[["^3R","^42"]]]]]],"^6W",true,"^J","~$devtools.formatters.markup/body-lines","^6","devtools/formatters/markup.cljs","^:",18,"^3:",["^I",[["^3R","^42"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",159,"^3>",["^F",["^44","^3?"]],"^9",159,"^3@",2,"^3A",true,"^H",["^I",["^37",["^I",[["^3R","^42"]]]]]],"~$<fields>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",360,"^8",7,"^9",360,"^:",15,"^H",["^I",["^37",["^I",[["^4?","~$&",["~$max-fields"]]]]]],"^3G",["^ ","^3=",true,"^3H",1,"^3@",1,"^3:",[["^I",["^4?",["^71"]]]],"^H",["^I",[["^4?","~$&",["^71"]]]],"^3<",["^I",[null]]]],"^J","~$devtools.formatters.markup/<fields>","^6","devtools/formatters/markup.cljs","^:",15,"^3G",["^ ","^3=",true,"^3H",1,"^3@",1,"^3:",[["^I",["^4?",["^71"]]]],"^H",["^I",[["^4?","~$&",["^71"]]]],"^3<",["^I",[null]]],"^3:",[["^I",["^4?",["^71"]]]],"^3;",null,"^3H",1,"^3<",["^I",[null]],"^8",1,"^3=",true,"^3J",[["^ ","^3H",1,"^3=",true,"^3K","^44"]],"^7",360,"^3>","^3M","^9",360,"^3@",1,"^3A",true,"^H",["^I",[["^4?","~$&",["^71"]]]]],"~$<nil>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",68,"^8",7,"^9",68,"^:",12,"^H",["^I",["^37",["^I",[[]]]]]],"^J","~$devtools.formatters.markup/<nil>","^6","devtools/formatters/markup.cljs","^:",12,"^3:",["^I",[[]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",68,"^3>","^3?","^9",68,"^3@",0,"^3A",true,"^H",["^I",["^37",["^I",[[]]]]]],"~$<body>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",118,"^8",7,"^9",118,"^:",13,"^H",["^I",["^37",["^I",[["~$markup"]]]]]],"^J","~$devtools.formatters.markup/<body>","^6","devtools/formatters/markup.cljs","^:",13,"^3:",["^I",[["^76"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",118,"^3>","^3?","^9",118,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^76"]]]]]],"~$<number>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",81,"^8",7,"^9",81,"^:",15,"^H",["^I",["^37",["^I",[["~$number"]]]]]],"^J","~$devtools.formatters.markup/<number>","^6","devtools/formatters/markup.cljs","^:",15,"^3:",["^I",[["^79"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",81,"^3>","^3?","^9",81,"^3@",1,"^3A",true,"^H",["^I",["^37",["^I",[["^79"]]]]]],"~$<protocol-details>",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",309,"^8",7,"^9",309,"^:",25,"^H",["^I",["^37",["^I",[["^4@","^1I","^5S","~$selector","~$_fast?"]]]]]],"^J","~$devtools.formatters.markup/<protocol-details>","^6","devtools/formatters/markup.cljs","^:",25,"^3:",["^I",[["^4@","^1I","^5S","^7<","^7="]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",309,"^3>","^3?","^9",309,"^3@",5,"^3A",true,"^H",["^I",["^37",["^I",[["^4@","^1I","^5S","^7<","^7="]]]]]],"~$prepare-body-lines",["^ ","^36",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",151,"^8",8,"^9",151,"^:",26,"^6W",true,"^H",["^I",["^37",["^I",[["~$data","^42"]]]]]],"^6W",true,"^J","~$devtools.formatters.markup/prepare-body-lines","^6","devtools/formatters/markup.cljs","^:",26,"^3:",["^I",[["^7@","^42"]]],"^3;",null,"^3<",["^I",[null,null]],"^8",1,"^3=",false,"^7",151,"^3>",["^F",["^44","^3?"]],"^9",151,"^3@",2,"^3A",true,"^H",["^I",["^37",["^I",[["^7@","^42"]]]]]]],"^[",["^ ","^D","^D","^W","^W","^U","^U","^V","^U"],"~:cljs.analyzer/constants",["^ ","^Y",["^F",["~:protocol-method-arities-header-close-symbol","~:protocol-details","~:max-number-body-items","~:meta-reference-tag","~:instance-custom-printing-tag","~:type-header-background","~:body-field-symbol","~:body-items-more-tag","~:line-index-separator","~:new-line-string-replacer","~:selector","~:more-fields-symbol","~:body-field-value-spacer","~:standard-body","~:protocol-background","~:protocols-icon","~:standalone-type","~:standard-ol-no-margin-tag","~:symbol-tag","~:render-keywords","~:fn-header-tag","~:keyword-tag","~:protocol-method-arities","~:surrogate","~:fields-header-tag","^5","~:aligned-body","~:body-items-more-label","~:nil-tag","~:index","~:instance","~:float-tag","~:protocol-ns-name-tag","~:protocol-method","~:protocol-method-arities-details","~:protocol-method-arities-more-symbol","~:number","~:index-tag","~:rest-symbol","~:protocol","~:protocols-list-close-symbol","~:protocol-name-tag","~:protocol-method-arity","~:float-infinity-tag","~:more-protocols","~:instance-header-background","~:body-tag","~:cljs-land-tag","~:max-list-protocols","~:string-abbreviation-marker","~:native-icon","~:instance-body-fields-table-tag","~:render-symbols","^L","~:symbol","~:fields-details-row","^J","~:type-name-tag","~:list-separator","~:header-field-value-spacer","~:fast-protocol-tag","~:render-strings","~:standalone-type-tag","~:type-header-tag","~:lambda-icon","~:render-functions","~:fields-header-open-symbol","~:fields","~:type-details","~:fn-name-tag","~:protocols-list","~:header-field-value-tag","~:fields-icon","~:type-wrapper-tag","~:field","~:type","~:standard-li-tag","~:type-basis-item","~:render-bools","~:dq","~:fields-header-no-fields-symbol","~:nil-label","~:meta-wrapper","~:protocols-list-open-symbol","~:list-open-symbol","~:raw-surrogate","~:header-field-separator","~:function-details","~:body-field-td3-tag","~:string","~:surrogate-header","~:more-symbol","~:native-reference","~:header","~:string-tag","~:meta-wrapper-tag","~:method-icon","~:function","~:max-protocol-method-arities-list","~:reference-surrogate","~:header-protocol-separator","~:basis-icon","~:surrogate-body","~:fn-args-tag","~:bool-tag","~:expandable-inner-tag","~:fn-prefix-tag","~:type-basis-item-tag","~:fn-ns-name-tag","~:header-tag","~:body-field-name-tag","~:open-symbol","~:protocol-method-arities-header-open-symbol","~:expanded-string-tag","~:protocol-more-tag","~:reference","~:meta-body-tag","~:instance-custom-printing-background","~:preview","~:fast?","~:native-reference-background","~:details","~:float-nan-tag","~:instance-type-header-tag","~:list","~:keyword","~:spacer","~:body-field-tr-tag","~:surrogate-target","~:header-field-name-tag","~:standard-li-no-margin-tag","~:list-tag","~:body-field-td1-tag","~:nil","~:render-types","~:string-postfix-limit","~:protocol-method-arities-list-header-separator","~:protocol-method-tag","~:fields-details","~:list-close-symbol","~:render-numbers","~:circular-reference","~:expandable","~:body-field-value-tag","~:empty-basis-symbol","~:list-details","~:fn-icon","~:integer-tag","~:type-basis-item-separator","~:protocols-header-tag","~:protocol-method-name-tag","~:item-tag","~:instance-value-tag","~:circular-ref-icon","~:standard-ol-tag","~:standard-body-reference","^3K","~:circular-reference-body-tag","~:bool","~:native-reference-tag","~:target","~:type-basis","~:aligned-li-tag","~:render-instances","~:expandable-symbol","~:fn-multi-arity-args-indent-tag","~:expandable-tag","~:protocol-method-arities-header-tag","~:max-instance-header-fields","~:arities","~:type-ref-tag","~:max-print-level","~:multi-arity-symbol","~:render-nils","~:meta-header-tag","~:body","~:separator","~:slow-protocol-tag","~:header-field-tag","~:native-reference-wrapper-tag","~:fields-header-close-symbol","~:string-prefix-limit","~:instance-custom-printing-wrapper-tag","~:body-field-td2-tag","~:atomic","~:type-basis-tag","~:close-symbol","~:type-symbol","~:instance-header-tag","~:header-expander","~:ns-icon","~:body-line-max-print-level","~:circular-reference-tag","~:header-expander-symbol","~:cljs-land"]],"~:order",["^9Q","^;5","^;3","^;O","^:U","^:X","^;B","^:4","^:Z","^;P","^:[","^8E","^82","^99","^9P","^7X","^7U","^:O","^85","^:6","^8A","^97","^7L","^;D","^:C","^8G","^9F","^9Y","^9U","^;:","^8D","^;1","^7T","^:V","^:>","^94","^8;","^7K","^:S","^;N","^7E","^7J","^81","^;?","^8N","^9C","^3K","^:?","^9W","^9<","^;I","^:G","^:5","^:0","^;=","^7F","^9G","^;4","^9O","^;M","^9T","^8H","^;;","^::","^8<","^8Y","^8T","^:N","^9R","^7W","^9S","^:P","^;H","^:L","^9M","^8M","^8S","^;J","^91","^7H","^;9","^8R","^9J","^;6","^9X","^:D","^89","^7C","^:E","^9H","^:R","^86","^L","^J","^7M","^:3","^8?","^8P","^;@","^7Q","^9Z","^8F","^:Q","^9;","^8>","^9L","^;A","^:=","^8O","^8[","^9>","^:;","^:@","^7I","^9V","^;F","^7O","^9@","^:K","^7[","^98","^;7","^8V","^7N","^;C","^90","^8I","^7R","^:7","^:T","^;E","^:1","^7G","^;K","^8C","^;<","^96","^8Q","^:H","^7V","^8J","^;2","^:B","^8U","^80","^9D","^9K","^:9","^7Y","^9B","^8B","^92","^8K","^:F","^;G","^9A","^7P","^;0","^:Y","^7S","^:2","^9E","^87","^;Q","^95","^88","^8L","^:W","^9N","^:J","^93","^8@","^9=","^8X","^:8","^9:","^8=","^83","^7Z","^8Z","^5","^84","^9[","^9?","^9I","^;8","^;L","^:M","^:I","^:<","^8W","^:A","^;>","^8:","^7D"]],"^1L",["^ ","^[",["^F",[]],"^Z",["^F",[]]],"^1M",["^ "],"^1N",["^X","^W","^Q","^R","^S","^T","^U"]],"^L","^D","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^20",[["^;U","~:static-fns"],true,["^;U","~:elide-asserts"],false,["^;U","~:optimize-constants"],null,["^;U","^1S"],null,["^;U","~:external-config"],null,["^;U","~:tooling-config"],null,["^;U","~:emit-constants"],null,["^;U","~:load-tests"],null,["^;U","~:infer-externs"],true,["^;U","^1U"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^;U","~:fn-invoke-direct"],null,["^;U","~:source-map"],"/dev/null"]]]